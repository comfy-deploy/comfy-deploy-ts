overlay: 1.0.0
info:
  title: CodeSamples overlay for typescript target
  version: 0.0.0
actions:
  - target: $["paths"]["/assets"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.files.list({});

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/assets/folder"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.files.createFolder({
                name: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/assets/upload"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";
            import { openAsBlob } from "node:fs";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.files.upload({
                bodyUploadAssetFileAssetsUploadPost: {
                  file: await openAsBlob("example.file"),
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/assets/{asset_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.files.delete({
                assetId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/assets/{asset_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.files.get({
                assetId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/deployment"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.deployments.create({
                workflowVersionId: "<id>",
                workflowId: "<id>",
                machineId: "<id>",
                environment: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/deployments"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.deployments.list({});

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/file/upload"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";
            import { openAsBlob } from "node:fs";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.files.uploadFile({
                file: await openAsBlob("example.file"),
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/models"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.models.list();

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/run/deployment/queue"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.runDeployment.queue({
                inputs: {
                  "prompt": "A beautiful landscape",
                  "seed": 42,
                },
                webhook: "https://myapp.com/webhook",
                deploymentId: "15e79589-12c9-453c-a41a-348fdd7de957",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/run/deployment/stream"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.runDeployment.stream({
                inputs: {
                  "prompt": "A beautiful landscape",
                  "seed": 42,
                },
                webhook: "https://myapp.com/webhook",
                deploymentId: "15e79589-12c9-453c-a41a-348fdd7de957",
              });

              for await (const event of result) {
                // Handle the event
                console.log(event);
              }
            }

            run();
  - target: $["paths"]["/run/deployment/sync"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.deploymentRuns.sync({
                inputs: {
                  "prompt": "A beautiful landscape",
                  "seed": 42,
                },
                webhook: "https://myapp.com/webhook",
                deploymentId: "15e79589-12c9-453c-a41a-348fdd7de957",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/run/workflow/queue"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.runWorkflow.queue({
                inputs: {
                  "prompt": "A beautiful landscape",
                  "seed": 42,
                },
                webhook: "https://myapp.com/webhook",
                workflowId: "12345678-1234-5678-1234-567812345678",
                workflowApiJson: {},
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/run/workflow/stream"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.workflowRuns.stream({
                inputs: {
                  "prompt": "A beautiful landscape",
                  "seed": 42,
                },
                webhook: "https://myapp.com/webhook",
                workflowId: "12345678-1234-5678-1234-567812345678",
                workflowApiJson: {},
              });

              for await (const event of result) {
                // Handle the event
                console.log(event);
              }
            }

            run();
  - target: $["paths"]["/run/workflow/sync"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.runWorkflow.sync({
                inputs: {
                  "prompt": "A beautiful landscape",
                  "seed": 42,
                },
                webhook: "https://myapp.com/webhook",
                workflowId: "12345678-1234-5678-1234-567812345678",
                workflowApiJson: {},
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/run/{run_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.run.get({
                runId: "b888f774-3e7c-4135-a18c-6b985523c4bc",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/run/{run_id}/cancel"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.runs.cancel({
                runId: "<id>",
                cancelFunctionBody: {
                  functionId: "<id>",
                },
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/search/model"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.search.model({
                query: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/session"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.sessions.create({
                machineId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/session/increase-timeout"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.session.increaseTimeout({
                machineId: "<id>",
                sessionId: "e6f84dca-600e-4a8d-83a2-d56530338181",
                timeout: 588226,
                gpu: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/session/{session_id}"]["delete"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.session.cancel({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/session/{session_id}"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.session.get({
                sessionId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["/sessions"]["get"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy({
              bearer: "<YOUR_BEARER_TOKEN_HERE>",
            });

            async function run() {
              const result = await comfyDeploy.sessions.list({
                machineId: "<id>",
              });

              // Handle the result
              console.log(result);
            }

            run();
  - target: $["paths"]["{$request.body#/webhook}"]["post"]
    update:
      x-codeSamples:
        - lang: typescript
          label: SDK (TypeScript)
          source: |-
            import { ComfyDeploy } from "comfydeploy";

            const comfyDeploy = new ComfyDeploy();

            async function run() {
              const result = await comfyDeploy.callbacks.runUpdateRequestBodyWebhookPost({
                runId: "<id>",
                status: "success",
                liveStatus: "<value>",
              });

              // Handle the result
              console.log(result);
            }

            run();
