/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { filesCreateFolder } from "../funcs/filesCreateFolder.js";
import { filesDelete } from "../funcs/filesDelete.js";
import { filesGet } from "../funcs/filesGet.js";
import { filesList } from "../funcs/filesList.js";
import { filesUpload } from "../funcs/filesUpload.js";
import { filesUploadFile } from "../funcs/filesUploadFile.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Files extends ClientSDK {
  /**
   * Upload File
   */
  async uploadFile(
    request: components.BodyUploadFileFileUploadPost,
    options?: RequestOptions,
  ): Promise<components.FileUploadResponse> {
    return unwrapAsync(filesUploadFile(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Folder
   */
  async createFolder(
    request: components.CreateFolderRequest,
    options?: RequestOptions,
  ): Promise<components.AssetResponse> {
    return unwrapAsync(filesCreateFolder(
      this,
      request,
      options,
    ));
  }

  /**
   * List Assets
   */
  async list(
    request: operations.ListAssetsAssetsGetRequest,
    options?: RequestOptions,
  ): Promise<Array<components.AssetResponse>> {
    return unwrapAsync(filesList(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete Asset
   */
  async delete(
    request: operations.DeleteAssetAssetsAssetIdDeleteRequest,
    options?: RequestOptions,
  ): Promise<any> {
    return unwrapAsync(filesDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Asset
   */
  async get(
    request: operations.GetAssetAssetsAssetIdGetRequest,
    options?: RequestOptions,
  ): Promise<components.AssetResponse> {
    return unwrapAsync(filesGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Upload Asset File
   */
  async upload(
    request: operations.UploadAssetFileAssetsUploadPostRequest,
    options?: RequestOptions,
  ): Promise<components.AssetResponse> {
    return unwrapAsync(filesUpload(
      this,
      request,
      options,
    ));
  }
}
