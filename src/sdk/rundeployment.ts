/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { runDeploymentQueue } from "../funcs/runDeploymentQueue.js";
import { runDeploymentStream } from "../funcs/runDeploymentStream.js";
import { EventStream } from "../lib/event-streams.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class RunDeployment extends ClientSDK {
  /**
   * Deployment - Queue
   *
   * @remarks
   * Create a new deployment run with the given parameters.
   */
  async queue(
    request: components.DeploymentRunRequest,
    options?: RequestOptions,
  ): Promise<components.CreateRunResponse> {
    return unwrapAsync(runDeploymentQueue(
      this,
      request,
      options,
    ));
  }

  /**
   * Deployment - Stream
   *
   * @remarks
   * Create a new deployment run with the given parameters. This function sets up the run and initiates the execution process. For callback information, see [Callbacks](#tag/callbacks/POST/\{callback_url\}).
   */
  async stream(
    request: components.DeploymentRunRequest,
    options?: RequestOptions,
  ): Promise<EventStream<components.RunStream>> {
    return unwrapAsync(runDeploymentStream(
      this,
      request,
      options,
    ));
  }
}
