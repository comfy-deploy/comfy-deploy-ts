/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { validateWebhook } from "../funcs/validateWebhook.js";
import { ClientSDK } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";
import { Callbacks } from "./callbacks.js";
import { Run } from "./run.js";

export class ComfyDeploy extends ClientSDK {
  private _run?: Run;
  get run(): Run {
    return (this._run ??= new Run(this._options));
  }

  private _callbacks?: Callbacks;
  get callbacks(): Callbacks {
    return (this._callbacks ??= new Callbacks(this._options));
  }

  async validateWebhook({
    request,
  }: {
    request: {
      body: string;
      headers: Record<string, string> | Headers;
      url: string;
      method: string;
    } | Request;
  }): Promise<components.WorkflowRunWebhookBody> {
    return unwrapAsync(validateWebhook(
      this,
      { request },
    ));
  }
}
