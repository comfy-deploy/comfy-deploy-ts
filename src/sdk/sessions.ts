/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { sessionsCreate } from "../funcs/sessionsCreate.js";
import { sessionsList } from "../funcs/sessionsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Sessions extends ClientSDK {
  /**
   * Get Machine Sessions
   */
  async list(
    request: operations.GetMachineSessionsSessionsGetRequest,
    options?: RequestOptions,
  ): Promise<Array<components.GPUEventModel>> {
    return unwrapAsync(sessionsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create Session
   */
  async create(
    request: components.CreateSessionBody,
    options?: RequestOptions,
  ): Promise<components.CreateSessionResponse> {
    return unwrapAsync(sessionsCreate(
      this,
      request,
      options,
    ));
  }
}
