/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type CreateSessionBody = {
  /**
   * The GPU to use
   */
  gpu?: string | null | undefined;
  /**
   * The timeout in minutes
   */
  timeout?: number | null | undefined;
  /**
   * Whether to create the session asynchronously
   */
  asyncCreation?: boolean | undefined;
};

/** @internal */
export const CreateSessionBody$inboundSchema: z.ZodType<
  CreateSessionBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  gpu: z.nullable(z.string()).optional(),
  timeout: z.nullable(z.number().int()).optional(),
  async_creation: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    "async_creation": "asyncCreation",
  });
});

/** @internal */
export type CreateSessionBody$Outbound = {
  gpu?: string | null | undefined;
  timeout?: number | null | undefined;
  async_creation: boolean;
};

/** @internal */
export const CreateSessionBody$outboundSchema: z.ZodType<
  CreateSessionBody$Outbound,
  z.ZodTypeDef,
  CreateSessionBody
> = z.object({
  gpu: z.nullable(z.string()).optional(),
  timeout: z.nullable(z.number().int()).optional(),
  asyncCreation: z.boolean().default(false),
}).transform((v) => {
  return remap$(v, {
    asyncCreation: "async_creation",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateSessionBody$ {
  /** @deprecated use `CreateSessionBody$inboundSchema` instead. */
  export const inboundSchema = CreateSessionBody$inboundSchema;
  /** @deprecated use `CreateSessionBody$outboundSchema` instead. */
  export const outboundSchema = CreateSessionBody$outboundSchema;
  /** @deprecated use `CreateSessionBody$Outbound` instead. */
  export type Outbound = CreateSessionBody$Outbound;
}
