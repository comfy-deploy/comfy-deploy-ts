/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const DeploymentRunRequestExecutionMode = {
  Async: "async",
  Sync: "sync",
  SyncFirstResult: "sync_first_result",
  Stream: "stream",
} as const;
export type DeploymentRunRequestExecutionMode = ClosedEnum<
  typeof DeploymentRunRequestExecutionMode
>;

export type DeploymentRunRequestInputs = {};

export type DeploymentRunRequest = {
  executionMode?: DeploymentRunRequestExecutionMode | null | undefined;
  inputs?: DeploymentRunRequestInputs | null | undefined;
  webhook?: string | null | undefined;
  webhookIntermediateStatus?: boolean | null | undefined;
  origin?: string | null | undefined;
  batchNumber?: number | null | undefined;
  /**
   * Optional dictionary of batch input parameters. Keys are input names, values are lists of inputs.
   */
  batchInputParams?: { [k: string]: Array<any> } | null | undefined;
  isNativeRun?: boolean | null | undefined;
  deploymentId: string;
};

/** @internal */
export const DeploymentRunRequestExecutionMode$inboundSchema: z.ZodNativeEnum<
  typeof DeploymentRunRequestExecutionMode
> = z.nativeEnum(DeploymentRunRequestExecutionMode);

/** @internal */
export const DeploymentRunRequestExecutionMode$outboundSchema: z.ZodNativeEnum<
  typeof DeploymentRunRequestExecutionMode
> = DeploymentRunRequestExecutionMode$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeploymentRunRequestExecutionMode$ {
  /** @deprecated use `DeploymentRunRequestExecutionMode$inboundSchema` instead. */
  export const inboundSchema = DeploymentRunRequestExecutionMode$inboundSchema;
  /** @deprecated use `DeploymentRunRequestExecutionMode$outboundSchema` instead. */
  export const outboundSchema =
    DeploymentRunRequestExecutionMode$outboundSchema;
}

/** @internal */
export const DeploymentRunRequestInputs$inboundSchema: z.ZodType<
  DeploymentRunRequestInputs,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type DeploymentRunRequestInputs$Outbound = {};

/** @internal */
export const DeploymentRunRequestInputs$outboundSchema: z.ZodType<
  DeploymentRunRequestInputs$Outbound,
  z.ZodTypeDef,
  DeploymentRunRequestInputs
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeploymentRunRequestInputs$ {
  /** @deprecated use `DeploymentRunRequestInputs$inboundSchema` instead. */
  export const inboundSchema = DeploymentRunRequestInputs$inboundSchema;
  /** @deprecated use `DeploymentRunRequestInputs$outboundSchema` instead. */
  export const outboundSchema = DeploymentRunRequestInputs$outboundSchema;
  /** @deprecated use `DeploymentRunRequestInputs$Outbound` instead. */
  export type Outbound = DeploymentRunRequestInputs$Outbound;
}

/** @internal */
export const DeploymentRunRequest$inboundSchema: z.ZodType<
  DeploymentRunRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  execution_mode: z.nullable(DeploymentRunRequestExecutionMode$inboundSchema)
    .optional(),
  inputs: z.nullable(z.lazy(() => DeploymentRunRequestInputs$inboundSchema))
    .optional(),
  webhook: z.nullable(z.string()).optional(),
  webhook_intermediate_status: z.nullable(z.boolean()).optional(),
  origin: z.nullable(z.string()).optional(),
  batch_number: z.nullable(z.number().int()).optional(),
  batch_input_params: z.nullable(z.record(z.array(z.any()))).optional(),
  is_native_run: z.nullable(z.boolean()).optional(),
  deployment_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "execution_mode": "executionMode",
    "webhook_intermediate_status": "webhookIntermediateStatus",
    "batch_number": "batchNumber",
    "batch_input_params": "batchInputParams",
    "is_native_run": "isNativeRun",
    "deployment_id": "deploymentId",
  });
});

/** @internal */
export type DeploymentRunRequest$Outbound = {
  execution_mode?: string | null | undefined;
  inputs?: DeploymentRunRequestInputs$Outbound | null | undefined;
  webhook?: string | null | undefined;
  webhook_intermediate_status?: boolean | null | undefined;
  origin?: string | null | undefined;
  batch_number?: number | null | undefined;
  batch_input_params?: { [k: string]: Array<any> } | null | undefined;
  is_native_run?: boolean | null | undefined;
  deployment_id: string;
};

/** @internal */
export const DeploymentRunRequest$outboundSchema: z.ZodType<
  DeploymentRunRequest$Outbound,
  z.ZodTypeDef,
  DeploymentRunRequest
> = z.object({
  executionMode: z.nullable(DeploymentRunRequestExecutionMode$outboundSchema)
    .optional(),
  inputs: z.nullable(z.lazy(() => DeploymentRunRequestInputs$outboundSchema))
    .optional(),
  webhook: z.nullable(z.string()).optional(),
  webhookIntermediateStatus: z.nullable(z.boolean()).optional(),
  origin: z.nullable(z.string()).optional(),
  batchNumber: z.nullable(z.number().int()).optional(),
  batchInputParams: z.nullable(z.record(z.array(z.any()))).optional(),
  isNativeRun: z.nullable(z.boolean()).optional(),
  deploymentId: z.string(),
}).transform((v) => {
  return remap$(v, {
    executionMode: "execution_mode",
    webhookIntermediateStatus: "webhook_intermediate_status",
    batchNumber: "batch_number",
    batchInputParams: "batch_input_params",
    isNativeRun: "is_native_run",
    deploymentId: "deployment_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeploymentRunRequest$ {
  /** @deprecated use `DeploymentRunRequest$inboundSchema` instead. */
  export const inboundSchema = DeploymentRunRequest$inboundSchema;
  /** @deprecated use `DeploymentRunRequest$outboundSchema` instead. */
  export const outboundSchema = DeploymentRunRequest$outboundSchema;
  /** @deprecated use `DeploymentRunRequest$Outbound` instead. */
  export type Outbound = DeploymentRunRequest$Outbound;
}
