/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeploymentFeaturedModel = {
  workflow: { [k: string]: any | null };
  description?: string | null | undefined;
  shareSlug?: string | null | undefined;
};

/** @internal */
export const DeploymentFeaturedModel$inboundSchema: z.ZodType<
  DeploymentFeaturedModel,
  z.ZodTypeDef,
  unknown
> = z.object({
  workflow: z.record(z.nullable(z.any())),
  description: z.nullable(z.string()).optional(),
  share_slug: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "share_slug": "shareSlug",
  });
});

/** @internal */
export type DeploymentFeaturedModel$Outbound = {
  workflow: { [k: string]: any | null };
  description?: string | null | undefined;
  share_slug?: string | null | undefined;
};

/** @internal */
export const DeploymentFeaturedModel$outboundSchema: z.ZodType<
  DeploymentFeaturedModel$Outbound,
  z.ZodTypeDef,
  DeploymentFeaturedModel
> = z.object({
  workflow: z.record(z.nullable(z.any())),
  description: z.nullable(z.string()).optional(),
  shareSlug: z.nullable(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    shareSlug: "share_slug",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeploymentFeaturedModel$ {
  /** @deprecated use `DeploymentFeaturedModel$inboundSchema` instead. */
  export const inboundSchema = DeploymentFeaturedModel$inboundSchema;
  /** @deprecated use `DeploymentFeaturedModel$outboundSchema` instead. */
  export const outboundSchema = DeploymentFeaturedModel$outboundSchema;
  /** @deprecated use `DeploymentFeaturedModel$Outbound` instead. */
  export type Outbound = DeploymentFeaturedModel$Outbound;
}

export function deploymentFeaturedModelToJSON(
  deploymentFeaturedModel: DeploymentFeaturedModel,
): string {
  return JSON.stringify(
    DeploymentFeaturedModel$outboundSchema.parse(deploymentFeaturedModel),
  );
}

export function deploymentFeaturedModelFromJSON(
  jsonString: string,
): SafeParseResult<DeploymentFeaturedModel, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeploymentFeaturedModel$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeploymentFeaturedModel' from JSON`,
  );
}
