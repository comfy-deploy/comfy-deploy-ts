/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type IncreaseTimeoutBody2 = {
  minutes: number;
};

/** @internal */
export const IncreaseTimeoutBody2$inboundSchema: z.ZodType<
  IncreaseTimeoutBody2,
  z.ZodTypeDef,
  unknown
> = z.object({
  minutes: z.number().int(),
});

/** @internal */
export type IncreaseTimeoutBody2$Outbound = {
  minutes: number;
};

/** @internal */
export const IncreaseTimeoutBody2$outboundSchema: z.ZodType<
  IncreaseTimeoutBody2$Outbound,
  z.ZodTypeDef,
  IncreaseTimeoutBody2
> = z.object({
  minutes: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IncreaseTimeoutBody2$ {
  /** @deprecated use `IncreaseTimeoutBody2$inboundSchema` instead. */
  export const inboundSchema = IncreaseTimeoutBody2$inboundSchema;
  /** @deprecated use `IncreaseTimeoutBody2$outboundSchema` instead. */
  export const outboundSchema = IncreaseTimeoutBody2$outboundSchema;
  /** @deprecated use `IncreaseTimeoutBody2$Outbound` instead. */
  export type Outbound = IncreaseTimeoutBody2$Outbound;
}

export function increaseTimeoutBody2ToJSON(
  increaseTimeoutBody2: IncreaseTimeoutBody2,
): string {
  return JSON.stringify(
    IncreaseTimeoutBody2$outboundSchema.parse(increaseTimeoutBody2),
  );
}

export function increaseTimeoutBody2FromJSON(
  jsonString: string,
): SafeParseResult<IncreaseTimeoutBody2, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => IncreaseTimeoutBody2$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'IncreaseTimeoutBody2' from JSON`,
  );
}
