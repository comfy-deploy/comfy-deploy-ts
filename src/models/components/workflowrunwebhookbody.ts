/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  WorkflowRunOutputModel,
  WorkflowRunOutputModel$inboundSchema,
  WorkflowRunOutputModel$Outbound,
  WorkflowRunOutputModel$outboundSchema,
} from "./workflowrunoutputmodel.js";
import {
  WorkflowRunStatus,
  WorkflowRunStatus$inboundSchema,
  WorkflowRunStatus$outboundSchema,
} from "./workflowrunstatus.js";

export type WorkflowRunWebhookBody = {
  runId: string;
  status: WorkflowRunStatus;
  liveStatus: string | null;
  progress?: number | undefined;
  outputs?: Array<WorkflowRunOutputModel> | undefined;
};

/** @internal */
export const WorkflowRunWebhookBody$inboundSchema: z.ZodType<
  WorkflowRunWebhookBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  run_id: z.string(),
  status: WorkflowRunStatus$inboundSchema,
  live_status: z.nullable(z.string()),
  progress: z.number().default(0),
  outputs: z.array(WorkflowRunOutputModel$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "run_id": "runId",
    "live_status": "liveStatus",
  });
});

/** @internal */
export type WorkflowRunWebhookBody$Outbound = {
  run_id: string;
  status: string;
  live_status: string | null;
  progress: number;
  outputs?: Array<WorkflowRunOutputModel$Outbound> | undefined;
};

/** @internal */
export const WorkflowRunWebhookBody$outboundSchema: z.ZodType<
  WorkflowRunWebhookBody$Outbound,
  z.ZodTypeDef,
  WorkflowRunWebhookBody
> = z.object({
  runId: z.string(),
  status: WorkflowRunStatus$outboundSchema,
  liveStatus: z.nullable(z.string()),
  progress: z.number().default(0),
  outputs: z.array(WorkflowRunOutputModel$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    runId: "run_id",
    liveStatus: "live_status",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowRunWebhookBody$ {
  /** @deprecated use `WorkflowRunWebhookBody$inboundSchema` instead. */
  export const inboundSchema = WorkflowRunWebhookBody$inboundSchema;
  /** @deprecated use `WorkflowRunWebhookBody$outboundSchema` instead. */
  export const outboundSchema = WorkflowRunWebhookBody$outboundSchema;
  /** @deprecated use `WorkflowRunWebhookBody$Outbound` instead. */
  export type Outbound = WorkflowRunWebhookBody$Outbound;
}

export function workflowRunWebhookBodyToJSON(
  workflowRunWebhookBody: WorkflowRunWebhookBody,
): string {
  return JSON.stringify(
    WorkflowRunWebhookBody$outboundSchema.parse(workflowRunWebhookBody),
  );
}

export function workflowRunWebhookBodyFromJSON(
  jsonString: string,
): SafeParseResult<WorkflowRunWebhookBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => WorkflowRunWebhookBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'WorkflowRunWebhookBody' from JSON`,
  );
}
