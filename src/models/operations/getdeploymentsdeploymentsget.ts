/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetDeploymentsDeploymentsGetRequest = {
  environment?: components.DeploymentEnvironment | null | undefined;
};

/** @internal */
export const GetDeploymentsDeploymentsGetRequest$inboundSchema: z.ZodType<
  GetDeploymentsDeploymentsGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  environment: z.nullable(components.DeploymentEnvironment$inboundSchema)
    .optional(),
});

/** @internal */
export type GetDeploymentsDeploymentsGetRequest$Outbound = {
  environment?: string | null | undefined;
};

/** @internal */
export const GetDeploymentsDeploymentsGetRequest$outboundSchema: z.ZodType<
  GetDeploymentsDeploymentsGetRequest$Outbound,
  z.ZodTypeDef,
  GetDeploymentsDeploymentsGetRequest
> = z.object({
  environment: z.nullable(components.DeploymentEnvironment$outboundSchema)
    .optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentsDeploymentsGetRequest$ {
  /** @deprecated use `GetDeploymentsDeploymentsGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetDeploymentsDeploymentsGetRequest$inboundSchema;
  /** @deprecated use `GetDeploymentsDeploymentsGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetDeploymentsDeploymentsGetRequest$outboundSchema;
  /** @deprecated use `GetDeploymentsDeploymentsGetRequest$Outbound` instead. */
  export type Outbound = GetDeploymentsDeploymentsGetRequest$Outbound;
}

export function getDeploymentsDeploymentsGetRequestToJSON(
  getDeploymentsDeploymentsGetRequest: GetDeploymentsDeploymentsGetRequest,
): string {
  return JSON.stringify(
    GetDeploymentsDeploymentsGetRequest$outboundSchema.parse(
      getDeploymentsDeploymentsGetRequest,
    ),
  );
}

export function getDeploymentsDeploymentsGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetDeploymentsDeploymentsGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetDeploymentsDeploymentsGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetDeploymentsDeploymentsGetRequest' from JSON`,
  );
}
