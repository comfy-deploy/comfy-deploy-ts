/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetApiWorkflowVersionVersionIdRequest = {
    versionId: string;
};

export type Workflow = {};

export type GetApiWorkflowVersionVersionIdWorkflowApi = {};

export type GetApiWorkflowVersionVersionIdSnapshot = {};

export type GetApiWorkflowVersionVersionIdDependencies = {};

/**
 * Retrieve the output
 */
export type GetApiWorkflowVersionVersionIdResponseBody = {
    workflowId: string;
    id: string;
    workflow: Workflow;
    workflowApi: GetApiWorkflowVersionVersionIdWorkflowApi;
    userId: string | null;
    comment: string | null;
    version: number;
    snapshot: GetApiWorkflowVersionVersionIdSnapshot;
    dependencies: GetApiWorkflowVersionVersionIdDependencies;
    createdAt: string;
    updatedAt: string;
};

/** @internal */
export const GetApiWorkflowVersionVersionIdRequest$inboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        version_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            version_id: "versionId",
        });
    });

/** @internal */
export type GetApiWorkflowVersionVersionIdRequest$Outbound = {
    version_id: string;
};

/** @internal */
export const GetApiWorkflowVersionVersionIdRequest$outboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdRequest$Outbound,
    z.ZodTypeDef,
    GetApiWorkflowVersionVersionIdRequest
> = z
    .object({
        versionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            versionId: "version_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkflowVersionVersionIdRequest$ {
    /** @deprecated use `GetApiWorkflowVersionVersionIdRequest$inboundSchema` instead. */
    export const inboundSchema = GetApiWorkflowVersionVersionIdRequest$inboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdRequest$outboundSchema` instead. */
    export const outboundSchema = GetApiWorkflowVersionVersionIdRequest$outboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdRequest$Outbound` instead. */
    export type Outbound = GetApiWorkflowVersionVersionIdRequest$Outbound;
}

/** @internal */
export const Workflow$inboundSchema: z.ZodType<Workflow, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Workflow$Outbound = {};

/** @internal */
export const Workflow$outboundSchema: z.ZodType<Workflow$Outbound, z.ZodTypeDef, Workflow> =
    z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Workflow$ {
    /** @deprecated use `Workflow$inboundSchema` instead. */
    export const inboundSchema = Workflow$inboundSchema;
    /** @deprecated use `Workflow$outboundSchema` instead. */
    export const outboundSchema = Workflow$outboundSchema;
    /** @deprecated use `Workflow$Outbound` instead. */
    export type Outbound = Workflow$Outbound;
}

/** @internal */
export const GetApiWorkflowVersionVersionIdWorkflowApi$inboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdWorkflowApi,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetApiWorkflowVersionVersionIdWorkflowApi$Outbound = {};

/** @internal */
export const GetApiWorkflowVersionVersionIdWorkflowApi$outboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdWorkflowApi$Outbound,
    z.ZodTypeDef,
    GetApiWorkflowVersionVersionIdWorkflowApi
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkflowVersionVersionIdWorkflowApi$ {
    /** @deprecated use `GetApiWorkflowVersionVersionIdWorkflowApi$inboundSchema` instead. */
    export const inboundSchema = GetApiWorkflowVersionVersionIdWorkflowApi$inboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdWorkflowApi$outboundSchema` instead. */
    export const outboundSchema = GetApiWorkflowVersionVersionIdWorkflowApi$outboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdWorkflowApi$Outbound` instead. */
    export type Outbound = GetApiWorkflowVersionVersionIdWorkflowApi$Outbound;
}

/** @internal */
export const GetApiWorkflowVersionVersionIdSnapshot$inboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdSnapshot,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetApiWorkflowVersionVersionIdSnapshot$Outbound = {};

/** @internal */
export const GetApiWorkflowVersionVersionIdSnapshot$outboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdSnapshot$Outbound,
    z.ZodTypeDef,
    GetApiWorkflowVersionVersionIdSnapshot
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkflowVersionVersionIdSnapshot$ {
    /** @deprecated use `GetApiWorkflowVersionVersionIdSnapshot$inboundSchema` instead. */
    export const inboundSchema = GetApiWorkflowVersionVersionIdSnapshot$inboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdSnapshot$outboundSchema` instead. */
    export const outboundSchema = GetApiWorkflowVersionVersionIdSnapshot$outboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdSnapshot$Outbound` instead. */
    export type Outbound = GetApiWorkflowVersionVersionIdSnapshot$Outbound;
}

/** @internal */
export const GetApiWorkflowVersionVersionIdDependencies$inboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdDependencies,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetApiWorkflowVersionVersionIdDependencies$Outbound = {};

/** @internal */
export const GetApiWorkflowVersionVersionIdDependencies$outboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdDependencies$Outbound,
    z.ZodTypeDef,
    GetApiWorkflowVersionVersionIdDependencies
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkflowVersionVersionIdDependencies$ {
    /** @deprecated use `GetApiWorkflowVersionVersionIdDependencies$inboundSchema` instead. */
    export const inboundSchema = GetApiWorkflowVersionVersionIdDependencies$inboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdDependencies$outboundSchema` instead. */
    export const outboundSchema = GetApiWorkflowVersionVersionIdDependencies$outboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdDependencies$Outbound` instead. */
    export type Outbound = GetApiWorkflowVersionVersionIdDependencies$Outbound;
}

/** @internal */
export const GetApiWorkflowVersionVersionIdResponseBody$inboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        workflow_id: z.string(),
        id: z.string(),
        workflow: z.lazy(() => Workflow$inboundSchema),
        workflow_api: z.lazy(() => GetApiWorkflowVersionVersionIdWorkflowApi$inboundSchema),
        user_id: z.nullable(z.string()),
        comment: z.nullable(z.string()),
        version: z.number(),
        snapshot: z.lazy(() => GetApiWorkflowVersionVersionIdSnapshot$inboundSchema),
        dependencies: z.lazy(() => GetApiWorkflowVersionVersionIdDependencies$inboundSchema),
        created_at: z.string(),
        updated_at: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            workflow_id: "workflowId",
            workflow_api: "workflowApi",
            user_id: "userId",
            created_at: "createdAt",
            updated_at: "updatedAt",
        });
    });

/** @internal */
export type GetApiWorkflowVersionVersionIdResponseBody$Outbound = {
    workflow_id: string;
    id: string;
    workflow: Workflow$Outbound;
    workflow_api: GetApiWorkflowVersionVersionIdWorkflowApi$Outbound;
    user_id: string | null;
    comment: string | null;
    version: number;
    snapshot: GetApiWorkflowVersionVersionIdSnapshot$Outbound;
    dependencies: GetApiWorkflowVersionVersionIdDependencies$Outbound;
    created_at: string;
    updated_at: string;
};

/** @internal */
export const GetApiWorkflowVersionVersionIdResponseBody$outboundSchema: z.ZodType<
    GetApiWorkflowVersionVersionIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiWorkflowVersionVersionIdResponseBody
> = z
    .object({
        workflowId: z.string(),
        id: z.string(),
        workflow: z.lazy(() => Workflow$outboundSchema),
        workflowApi: z.lazy(() => GetApiWorkflowVersionVersionIdWorkflowApi$outboundSchema),
        userId: z.nullable(z.string()),
        comment: z.nullable(z.string()),
        version: z.number(),
        snapshot: z.lazy(() => GetApiWorkflowVersionVersionIdSnapshot$outboundSchema),
        dependencies: z.lazy(() => GetApiWorkflowVersionVersionIdDependencies$outboundSchema),
        createdAt: z.string(),
        updatedAt: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            workflowId: "workflow_id",
            workflowApi: "workflow_api",
            userId: "user_id",
            createdAt: "created_at",
            updatedAt: "updated_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiWorkflowVersionVersionIdResponseBody$ {
    /** @deprecated use `GetApiWorkflowVersionVersionIdResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetApiWorkflowVersionVersionIdResponseBody$inboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetApiWorkflowVersionVersionIdResponseBody$outboundSchema;
    /** @deprecated use `GetApiWorkflowVersionVersionIdResponseBody$Outbound` instead. */
    export type Outbound = GetApiWorkflowVersionVersionIdResponseBody$Outbound;
}
