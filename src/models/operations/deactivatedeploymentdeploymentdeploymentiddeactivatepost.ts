/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest = {
  deploymentId: string;
};

/** @internal */
export const DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$inboundSchema:
  z.ZodType<
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    deployment_id: z.string(),
  }).transform((v) => {
    return remap$(v, {
      "deployment_id": "deploymentId",
    });
  });

/** @internal */
export type DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$Outbound =
  {
    deployment_id: string;
  };

/** @internal */
export const DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$outboundSchema:
  z.ZodType<
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$Outbound,
    z.ZodTypeDef,
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest
  > = z.object({
    deploymentId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      deploymentId: "deployment_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$ {
  /** @deprecated use `DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$inboundSchema;
  /** @deprecated use `DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$outboundSchema;
  /** @deprecated use `DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$Outbound` instead. */
  export type Outbound =
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$Outbound;
}

export function deactivateDeploymentDeploymentDeploymentIdDeactivatePostRequestToJSON(
  deactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest:
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest,
): string {
  return JSON.stringify(
    DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$outboundSchema
      .parse(deactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest),
  );
}

export function deactivateDeploymentDeploymentDeploymentIdDeactivatePostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest$inboundSchema
        .parse(JSON.parse(x)),
    `Failed to parse 'DeactivateDeploymentDeploymentDeploymentIdDeactivatePostRequest' from JSON`,
  );
}
