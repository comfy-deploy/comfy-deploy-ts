/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type CancelRunRunRunIdCancelPostRequest = {
  runId: string;
  cancelFunctionBody: components.CancelFunctionBody;
};

/** @internal */
export const CancelRunRunRunIdCancelPostRequest$inboundSchema: z.ZodType<
  CancelRunRunRunIdCancelPostRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  run_id: z.string(),
  CancelFunctionBody: components.CancelFunctionBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "run_id": "runId",
    "CancelFunctionBody": "cancelFunctionBody",
  });
});

/** @internal */
export type CancelRunRunRunIdCancelPostRequest$Outbound = {
  run_id: string;
  CancelFunctionBody: components.CancelFunctionBody$Outbound;
};

/** @internal */
export const CancelRunRunRunIdCancelPostRequest$outboundSchema: z.ZodType<
  CancelRunRunRunIdCancelPostRequest$Outbound,
  z.ZodTypeDef,
  CancelRunRunRunIdCancelPostRequest
> = z.object({
  runId: z.string(),
  cancelFunctionBody: components.CancelFunctionBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    runId: "run_id",
    cancelFunctionBody: "CancelFunctionBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CancelRunRunRunIdCancelPostRequest$ {
  /** @deprecated use `CancelRunRunRunIdCancelPostRequest$inboundSchema` instead. */
  export const inboundSchema = CancelRunRunRunIdCancelPostRequest$inboundSchema;
  /** @deprecated use `CancelRunRunRunIdCancelPostRequest$outboundSchema` instead. */
  export const outboundSchema =
    CancelRunRunRunIdCancelPostRequest$outboundSchema;
  /** @deprecated use `CancelRunRunRunIdCancelPostRequest$Outbound` instead. */
  export type Outbound = CancelRunRunRunIdCancelPostRequest$Outbound;
}

export function cancelRunRunRunIdCancelPostRequestToJSON(
  cancelRunRunRunIdCancelPostRequest: CancelRunRunRunIdCancelPostRequest,
): string {
  return JSON.stringify(
    CancelRunRunRunIdCancelPostRequest$outboundSchema.parse(
      cancelRunRunRunIdCancelPostRequest,
    ),
  );
}

export function cancelRunRunRunIdCancelPostRequestFromJSON(
  jsonString: string,
): SafeParseResult<CancelRunRunRunIdCancelPostRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      CancelRunRunRunIdCancelPostRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CancelRunRunRunIdCancelPostRequest' from JSON`,
  );
}
