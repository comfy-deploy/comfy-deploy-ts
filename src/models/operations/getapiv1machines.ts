/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Fields = {
    Full: "full",
    Minimal: "minimal",
} as const;
export type Fields = ClosedEnum<typeof Fields>;

export type GetApiV1MachinesRequest = {
    page?: string | undefined;
    pageSize?: string | undefined;
    fields?: Fields | undefined;
};

export type Machines = {
    id: string;
    name?: string | undefined;
    type?: string | undefined;
    status?: string | undefined;
    createdAt?: string | undefined;
    updatedAt?: string | undefined;
    endpoints: Array<string>;
    objectInfo?: any | null | undefined;
};

/**
 * Machines retrieved successfully
 */
export type GetApiV1MachinesResponseBody = {
    machines: Array<Machines>;
    total: number;
};

/** @internal */
export const Fields$inboundSchema: z.ZodNativeEnum<typeof Fields> = z.nativeEnum(Fields);

/** @internal */
export const Fields$outboundSchema: z.ZodNativeEnum<typeof Fields> = Fields$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Fields$ {
    /** @deprecated use `Fields$inboundSchema` instead. */
    export const inboundSchema = Fields$inboundSchema;
    /** @deprecated use `Fields$outboundSchema` instead. */
    export const outboundSchema = Fields$outboundSchema;
}

/** @internal */
export const GetApiV1MachinesRequest$inboundSchema: z.ZodType<
    GetApiV1MachinesRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    fields: Fields$inboundSchema.default("minimal"),
});

/** @internal */
export type GetApiV1MachinesRequest$Outbound = {
    page: string;
    pageSize: string;
    fields: string;
};

/** @internal */
export const GetApiV1MachinesRequest$outboundSchema: z.ZodType<
    GetApiV1MachinesRequest$Outbound,
    z.ZodTypeDef,
    GetApiV1MachinesRequest
> = z.object({
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    fields: Fields$outboundSchema.default("minimal"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1MachinesRequest$ {
    /** @deprecated use `GetApiV1MachinesRequest$inboundSchema` instead. */
    export const inboundSchema = GetApiV1MachinesRequest$inboundSchema;
    /** @deprecated use `GetApiV1MachinesRequest$outboundSchema` instead. */
    export const outboundSchema = GetApiV1MachinesRequest$outboundSchema;
    /** @deprecated use `GetApiV1MachinesRequest$Outbound` instead. */
    export type Outbound = GetApiV1MachinesRequest$Outbound;
}

/** @internal */
export const Machines$inboundSchema: z.ZodType<Machines, z.ZodTypeDef, unknown> = z
    .object({
        id: z.string(),
        name: z.string().optional(),
        type: z.string().optional(),
        status: z.string().optional(),
        created_at: z.string().optional(),
        updated_at: z.string().optional(),
        endpoints: z.array(z.string()),
        object_info: z.nullable(z.any()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            created_at: "createdAt",
            updated_at: "updatedAt",
            object_info: "objectInfo",
        });
    });

/** @internal */
export type Machines$Outbound = {
    id: string;
    name?: string | undefined;
    type?: string | undefined;
    status?: string | undefined;
    created_at?: string | undefined;
    updated_at?: string | undefined;
    endpoints: Array<string>;
    object_info?: any | null | undefined;
};

/** @internal */
export const Machines$outboundSchema: z.ZodType<Machines$Outbound, z.ZodTypeDef, Machines> = z
    .object({
        id: z.string(),
        name: z.string().optional(),
        type: z.string().optional(),
        status: z.string().optional(),
        createdAt: z.string().optional(),
        updatedAt: z.string().optional(),
        endpoints: z.array(z.string()),
        objectInfo: z.nullable(z.any()).optional(),
    })
    .transform((v) => {
        return remap$(v, {
            createdAt: "created_at",
            updatedAt: "updated_at",
            objectInfo: "object_info",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Machines$ {
    /** @deprecated use `Machines$inboundSchema` instead. */
    export const inboundSchema = Machines$inboundSchema;
    /** @deprecated use `Machines$outboundSchema` instead. */
    export const outboundSchema = Machines$outboundSchema;
    /** @deprecated use `Machines$Outbound` instead. */
    export type Outbound = Machines$Outbound;
}

/** @internal */
export const GetApiV1MachinesResponseBody$inboundSchema: z.ZodType<
    GetApiV1MachinesResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({
    machines: z.array(z.lazy(() => Machines$inboundSchema)),
    total: z.number(),
});

/** @internal */
export type GetApiV1MachinesResponseBody$Outbound = {
    machines: Array<Machines$Outbound>;
    total: number;
};

/** @internal */
export const GetApiV1MachinesResponseBody$outboundSchema: z.ZodType<
    GetApiV1MachinesResponseBody$Outbound,
    z.ZodTypeDef,
    GetApiV1MachinesResponseBody
> = z.object({
    machines: z.array(z.lazy(() => Machines$outboundSchema)),
    total: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetApiV1MachinesResponseBody$ {
    /** @deprecated use `GetApiV1MachinesResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetApiV1MachinesResponseBody$inboundSchema;
    /** @deprecated use `GetApiV1MachinesResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetApiV1MachinesResponseBody$outboundSchema;
    /** @deprecated use `GetApiV1MachinesResponseBody$Outbound` instead. */
    export type Outbound = GetApiV1MachinesResponseBody$Outbound;
}
