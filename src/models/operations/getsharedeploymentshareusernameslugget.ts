/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetShareDeploymentShareUsernameSlugGetRequest = {
  username: string;
  slug: string;
};

/** @internal */
export const GetShareDeploymentShareUsernameSlugGetRequest$inboundSchema:
  z.ZodType<
    GetShareDeploymentShareUsernameSlugGetRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    username: z.string(),
    slug: z.string(),
  });

/** @internal */
export type GetShareDeploymentShareUsernameSlugGetRequest$Outbound = {
  username: string;
  slug: string;
};

/** @internal */
export const GetShareDeploymentShareUsernameSlugGetRequest$outboundSchema:
  z.ZodType<
    GetShareDeploymentShareUsernameSlugGetRequest$Outbound,
    z.ZodTypeDef,
    GetShareDeploymentShareUsernameSlugGetRequest
  > = z.object({
    username: z.string(),
    slug: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetShareDeploymentShareUsernameSlugGetRequest$ {
  /** @deprecated use `GetShareDeploymentShareUsernameSlugGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetShareDeploymentShareUsernameSlugGetRequest$inboundSchema;
  /** @deprecated use `GetShareDeploymentShareUsernameSlugGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetShareDeploymentShareUsernameSlugGetRequest$outboundSchema;
  /** @deprecated use `GetShareDeploymentShareUsernameSlugGetRequest$Outbound` instead. */
  export type Outbound = GetShareDeploymentShareUsernameSlugGetRequest$Outbound;
}

export function getShareDeploymentShareUsernameSlugGetRequestToJSON(
  getShareDeploymentShareUsernameSlugGetRequest:
    GetShareDeploymentShareUsernameSlugGetRequest,
): string {
  return JSON.stringify(
    GetShareDeploymentShareUsernameSlugGetRequest$outboundSchema.parse(
      getShareDeploymentShareUsernameSlugGetRequest,
    ),
  );
}

export function getShareDeploymentShareUsernameSlugGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  GetShareDeploymentShareUsernameSlugGetRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      GetShareDeploymentShareUsernameSlugGetRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'GetShareDeploymentShareUsernameSlugGetRequest' from JSON`,
  );
}
