/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import * as components from "../components/index.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type SnapshotSessionSessionSessionIdSnapshotPostRequest = {
  sessionId: string;
  snapshotSessionBody?: components.SnapshotSessionBody | null | undefined;
};

/** @internal */
export const SnapshotSessionSessionSessionIdSnapshotPostRequest$inboundSchema:
  z.ZodType<
    SnapshotSessionSessionSessionIdSnapshotPostRequest,
    z.ZodTypeDef,
    unknown
  > = z.object({
    session_id: z.string(),
    SnapshotSessionBody: z.nullable(
      components.SnapshotSessionBody$inboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      "session_id": "sessionId",
      "SnapshotSessionBody": "snapshotSessionBody",
    });
  });

/** @internal */
export type SnapshotSessionSessionSessionIdSnapshotPostRequest$Outbound = {
  session_id: string;
  SnapshotSessionBody?:
    | components.SnapshotSessionBody$Outbound
    | null
    | undefined;
};

/** @internal */
export const SnapshotSessionSessionSessionIdSnapshotPostRequest$outboundSchema:
  z.ZodType<
    SnapshotSessionSessionSessionIdSnapshotPostRequest$Outbound,
    z.ZodTypeDef,
    SnapshotSessionSessionSessionIdSnapshotPostRequest
  > = z.object({
    sessionId: z.string(),
    snapshotSessionBody: z.nullable(
      components.SnapshotSessionBody$outboundSchema,
    ).optional(),
  }).transform((v) => {
    return remap$(v, {
      sessionId: "session_id",
      snapshotSessionBody: "SnapshotSessionBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SnapshotSessionSessionSessionIdSnapshotPostRequest$ {
  /** @deprecated use `SnapshotSessionSessionSessionIdSnapshotPostRequest$inboundSchema` instead. */
  export const inboundSchema =
    SnapshotSessionSessionSessionIdSnapshotPostRequest$inboundSchema;
  /** @deprecated use `SnapshotSessionSessionSessionIdSnapshotPostRequest$outboundSchema` instead. */
  export const outboundSchema =
    SnapshotSessionSessionSessionIdSnapshotPostRequest$outboundSchema;
  /** @deprecated use `SnapshotSessionSessionSessionIdSnapshotPostRequest$Outbound` instead. */
  export type Outbound =
    SnapshotSessionSessionSessionIdSnapshotPostRequest$Outbound;
}

export function snapshotSessionSessionSessionIdSnapshotPostRequestToJSON(
  snapshotSessionSessionSessionIdSnapshotPostRequest:
    SnapshotSessionSessionSessionIdSnapshotPostRequest,
): string {
  return JSON.stringify(
    SnapshotSessionSessionSessionIdSnapshotPostRequest$outboundSchema.parse(
      snapshotSessionSessionSessionIdSnapshotPostRequest,
    ),
  );
}

export function snapshotSessionSessionSessionIdSnapshotPostRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  SnapshotSessionSessionSessionIdSnapshotPostRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      SnapshotSessionSessionSessionIdSnapshotPostRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'SnapshotSessionSessionSessionIdSnapshotPostRequest' from JSON`,
  );
}
