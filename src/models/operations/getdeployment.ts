/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Environment = {
    Production: "production",
    Staging: "staging",
} as const;
export type Environment = ClosedEnum<typeof Environment>;

export type GetDeploymentRequest = {
    environment?: Environment | undefined;
};

export type GetDeploymentResponseBody = {};

/** @internal */
export const Environment$inboundSchema: z.ZodNativeEnum<typeof Environment> =
    z.nativeEnum(Environment);

/** @internal */
export const Environment$outboundSchema: z.ZodNativeEnum<typeof Environment> =
    Environment$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Environment$ {
    /** @deprecated use `Environment$inboundSchema` instead. */
    export const inboundSchema = Environment$inboundSchema;
    /** @deprecated use `Environment$outboundSchema` instead. */
    export const outboundSchema = Environment$outboundSchema;
}

/** @internal */
export const GetDeploymentRequest$inboundSchema: z.ZodType<
    GetDeploymentRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    environment: Environment$inboundSchema.optional(),
});

/** @internal */
export type GetDeploymentRequest$Outbound = {
    environment?: string | undefined;
};

/** @internal */
export const GetDeploymentRequest$outboundSchema: z.ZodType<
    GetDeploymentRequest$Outbound,
    z.ZodTypeDef,
    GetDeploymentRequest
> = z.object({
    environment: Environment$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentRequest$ {
    /** @deprecated use `GetDeploymentRequest$inboundSchema` instead. */
    export const inboundSchema = GetDeploymentRequest$inboundSchema;
    /** @deprecated use `GetDeploymentRequest$outboundSchema` instead. */
    export const outboundSchema = GetDeploymentRequest$outboundSchema;
    /** @deprecated use `GetDeploymentRequest$Outbound` instead. */
    export type Outbound = GetDeploymentRequest$Outbound;
}

/** @internal */
export const GetDeploymentResponseBody$inboundSchema: z.ZodType<
    GetDeploymentResponseBody,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetDeploymentResponseBody$Outbound = {};

/** @internal */
export const GetDeploymentResponseBody$outboundSchema: z.ZodType<
    GetDeploymentResponseBody$Outbound,
    z.ZodTypeDef,
    GetDeploymentResponseBody
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentResponseBody$ {
    /** @deprecated use `GetDeploymentResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetDeploymentResponseBody$inboundSchema;
    /** @deprecated use `GetDeploymentResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetDeploymentResponseBody$outboundSchema;
    /** @deprecated use `GetDeploymentResponseBody$Outbound` instead. */
    export type Outbound = GetDeploymentResponseBody$Outbound;
}
