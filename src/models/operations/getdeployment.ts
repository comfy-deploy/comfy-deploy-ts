/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const Environment = {
  Production: "production",
  Staging: "staging",
} as const;
export type Environment = ClosedEnum<typeof Environment>;

export type GetDeploymentRequest = {
  environment?: Environment | undefined;
};

export const GetDeploymentClassType = {
  ComfyUIDeployExternalText: "ComfyUIDeployExternalText",
  ComfyUIDeployExternalTextAny: "ComfyUIDeployExternalTextAny",
  ComfyUIDeployExternalTextSingleLine: "ComfyUIDeployExternalTextSingleLine",
  ComfyUIDeployExternalImage: "ComfyUIDeployExternalImage",
  ComfyUIDeployExternalImageAlpha: "ComfyUIDeployExternalImageAlpha",
  ComfyUIDeployExternalNumber: "ComfyUIDeployExternalNumber",
  ComfyUIDeployExternalNumberInt: "ComfyUIDeployExternalNumberInt",
  ComfyUIDeployExternalLora: "ComfyUIDeployExternalLora",
  ComfyUIDeployExternalCheckpoint: "ComfyUIDeployExternalCheckpoint",
  ComfyDeployWebscoketImageInput: "ComfyDeployWebscoketImageInput",
  ComfyUIDeployExternalImageBatch: "ComfyUIDeployExternalImageBatch",
  ComfyUIDeployExternalVideo: "ComfyUIDeployExternalVideo",
  ComfyUIDeployExternalBoolean: "ComfyUIDeployExternalBoolean",
  ComfyUIDeployExternalNumberSlider: "ComfyUIDeployExternalNumberSlider",
  ComfyUIDeployExternalNumberSliderInt: "ComfyUIDeployExternalNumberSliderInt",
  ComfyUIDeployExternalEnum: "ComfyUIDeployExternalEnum",
} as const;
export type GetDeploymentClassType = ClosedEnum<typeof GetDeploymentClassType>;

export type GetDeploymentDefaultValue = string | number;

export type InputsDefinition = {
  classType: GetDeploymentClassType;
  inputId: string;
  defaultValue: string | number;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  enumValues?: Array<string> | undefined;
};

export type GetDeploymentResponseBody = {
  deploymentId: string;
  name: string;
  inputsDefinition: Array<InputsDefinition> | null;
};

/** @internal */
export const Environment$inboundSchema: z.ZodNativeEnum<typeof Environment> = z
  .nativeEnum(Environment);

/** @internal */
export const Environment$outboundSchema: z.ZodNativeEnum<typeof Environment> =
  Environment$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Environment$ {
  /** @deprecated use `Environment$inboundSchema` instead. */
  export const inboundSchema = Environment$inboundSchema;
  /** @deprecated use `Environment$outboundSchema` instead. */
  export const outboundSchema = Environment$outboundSchema;
}

/** @internal */
export const GetDeploymentRequest$inboundSchema: z.ZodType<
  GetDeploymentRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  environment: Environment$inboundSchema.optional(),
});

/** @internal */
export type GetDeploymentRequest$Outbound = {
  environment?: string | undefined;
};

/** @internal */
export const GetDeploymentRequest$outboundSchema: z.ZodType<
  GetDeploymentRequest$Outbound,
  z.ZodTypeDef,
  GetDeploymentRequest
> = z.object({
  environment: Environment$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentRequest$ {
  /** @deprecated use `GetDeploymentRequest$inboundSchema` instead. */
  export const inboundSchema = GetDeploymentRequest$inboundSchema;
  /** @deprecated use `GetDeploymentRequest$outboundSchema` instead. */
  export const outboundSchema = GetDeploymentRequest$outboundSchema;
  /** @deprecated use `GetDeploymentRequest$Outbound` instead. */
  export type Outbound = GetDeploymentRequest$Outbound;
}

/** @internal */
export const GetDeploymentClassType$inboundSchema: z.ZodNativeEnum<
  typeof GetDeploymentClassType
> = z.nativeEnum(GetDeploymentClassType);

/** @internal */
export const GetDeploymentClassType$outboundSchema: z.ZodNativeEnum<
  typeof GetDeploymentClassType
> = GetDeploymentClassType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentClassType$ {
  /** @deprecated use `GetDeploymentClassType$inboundSchema` instead. */
  export const inboundSchema = GetDeploymentClassType$inboundSchema;
  /** @deprecated use `GetDeploymentClassType$outboundSchema` instead. */
  export const outboundSchema = GetDeploymentClassType$outboundSchema;
}

/** @internal */
export const GetDeploymentDefaultValue$inboundSchema: z.ZodType<
  GetDeploymentDefaultValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type GetDeploymentDefaultValue$Outbound = string | number;

/** @internal */
export const GetDeploymentDefaultValue$outboundSchema: z.ZodType<
  GetDeploymentDefaultValue$Outbound,
  z.ZodTypeDef,
  GetDeploymentDefaultValue
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentDefaultValue$ {
  /** @deprecated use `GetDeploymentDefaultValue$inboundSchema` instead. */
  export const inboundSchema = GetDeploymentDefaultValue$inboundSchema;
  /** @deprecated use `GetDeploymentDefaultValue$outboundSchema` instead. */
  export const outboundSchema = GetDeploymentDefaultValue$outboundSchema;
  /** @deprecated use `GetDeploymentDefaultValue$Outbound` instead. */
  export type Outbound = GetDeploymentDefaultValue$Outbound;
}

/** @internal */
export const InputsDefinition$inboundSchema: z.ZodType<
  InputsDefinition,
  z.ZodTypeDef,
  unknown
> = z.object({
  class_type: GetDeploymentClassType$inboundSchema,
  input_id: z.string(),
  default_value: z.union([z.string(), z.number()]),
  min_value: z.number().optional(),
  max_value: z.number().optional(),
  display_name: z.string().optional(),
  description: z.string().optional(),
  enum_values: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "class_type": "classType",
    "input_id": "inputId",
    "default_value": "defaultValue",
    "min_value": "minValue",
    "max_value": "maxValue",
    "display_name": "displayName",
    "enum_values": "enumValues",
  });
});

/** @internal */
export type InputsDefinition$Outbound = {
  class_type: string;
  input_id: string;
  default_value: string | number;
  min_value?: number | undefined;
  max_value?: number | undefined;
  display_name?: string | undefined;
  description?: string | undefined;
  enum_values?: Array<string> | undefined;
};

/** @internal */
export const InputsDefinition$outboundSchema: z.ZodType<
  InputsDefinition$Outbound,
  z.ZodTypeDef,
  InputsDefinition
> = z.object({
  classType: GetDeploymentClassType$outboundSchema,
  inputId: z.string(),
  defaultValue: z.union([z.string(), z.number()]),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  displayName: z.string().optional(),
  description: z.string().optional(),
  enumValues: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    classType: "class_type",
    inputId: "input_id",
    defaultValue: "default_value",
    minValue: "min_value",
    maxValue: "max_value",
    displayName: "display_name",
    enumValues: "enum_values",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace InputsDefinition$ {
  /** @deprecated use `InputsDefinition$inboundSchema` instead. */
  export const inboundSchema = InputsDefinition$inboundSchema;
  /** @deprecated use `InputsDefinition$outboundSchema` instead. */
  export const outboundSchema = InputsDefinition$outboundSchema;
  /** @deprecated use `InputsDefinition$Outbound` instead. */
  export type Outbound = InputsDefinition$Outbound;
}

/** @internal */
export const GetDeploymentResponseBody$inboundSchema: z.ZodType<
  GetDeploymentResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  deployment_id: z.string(),
  name: z.string(),
  inputs_definition: z.nullable(
    z.array(z.lazy(() => InputsDefinition$inboundSchema)),
  ),
}).transform((v) => {
  return remap$(v, {
    "deployment_id": "deploymentId",
    "inputs_definition": "inputsDefinition",
  });
});

/** @internal */
export type GetDeploymentResponseBody$Outbound = {
  deployment_id: string;
  name: string;
  inputs_definition: Array<InputsDefinition$Outbound> | null;
};

/** @internal */
export const GetDeploymentResponseBody$outboundSchema: z.ZodType<
  GetDeploymentResponseBody$Outbound,
  z.ZodTypeDef,
  GetDeploymentResponseBody
> = z.object({
  deploymentId: z.string(),
  name: z.string(),
  inputsDefinition: z.nullable(
    z.array(z.lazy(() => InputsDefinition$outboundSchema)),
  ),
}).transform((v) => {
  return remap$(v, {
    deploymentId: "deployment_id",
    inputsDefinition: "inputs_definition",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentResponseBody$ {
  /** @deprecated use `GetDeploymentResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetDeploymentResponseBody$inboundSchema;
  /** @deprecated use `GetDeploymentResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetDeploymentResponseBody$outboundSchema;
  /** @deprecated use `GetDeploymentResponseBody$Outbound` instead. */
  export type Outbound = GetDeploymentResponseBody$Outbound;
}
