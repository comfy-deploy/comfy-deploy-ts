/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetWebsocketDeploymentIdRequest = {
    deploymentId: string;
};

/**
 * Workflow queued
 */
export type GetWebsocketDeploymentIdResponseBody = {
    wsConnectionUrl: string;
};

/** @internal */
export const GetWebsocketDeploymentIdRequest$inboundSchema: z.ZodType<
    GetWebsocketDeploymentIdRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        deployment_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            deployment_id: "deploymentId",
        });
    });

/** @internal */
export type GetWebsocketDeploymentIdRequest$Outbound = {
    deployment_id: string;
};

/** @internal */
export const GetWebsocketDeploymentIdRequest$outboundSchema: z.ZodType<
    GetWebsocketDeploymentIdRequest$Outbound,
    z.ZodTypeDef,
    GetWebsocketDeploymentIdRequest
> = z
    .object({
        deploymentId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            deploymentId: "deployment_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWebsocketDeploymentIdRequest$ {
    /** @deprecated use `GetWebsocketDeploymentIdRequest$inboundSchema` instead. */
    export const inboundSchema = GetWebsocketDeploymentIdRequest$inboundSchema;
    /** @deprecated use `GetWebsocketDeploymentIdRequest$outboundSchema` instead. */
    export const outboundSchema = GetWebsocketDeploymentIdRequest$outboundSchema;
    /** @deprecated use `GetWebsocketDeploymentIdRequest$Outbound` instead. */
    export type Outbound = GetWebsocketDeploymentIdRequest$Outbound;
}

/** @internal */
export const GetWebsocketDeploymentIdResponseBody$inboundSchema: z.ZodType<
    GetWebsocketDeploymentIdResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        ws_connection_url: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            ws_connection_url: "wsConnectionUrl",
        });
    });

/** @internal */
export type GetWebsocketDeploymentIdResponseBody$Outbound = {
    ws_connection_url: string;
};

/** @internal */
export const GetWebsocketDeploymentIdResponseBody$outboundSchema: z.ZodType<
    GetWebsocketDeploymentIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetWebsocketDeploymentIdResponseBody
> = z
    .object({
        wsConnectionUrl: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            wsConnectionUrl: "ws_connection_url",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWebsocketDeploymentIdResponseBody$ {
    /** @deprecated use `GetWebsocketDeploymentIdResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetWebsocketDeploymentIdResponseBody$inboundSchema;
    /** @deprecated use `GetWebsocketDeploymentIdResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetWebsocketDeploymentIdResponseBody$outboundSchema;
    /** @deprecated use `GetWebsocketDeploymentIdResponseBody$Outbound` instead. */
    export type Outbound = GetWebsocketDeploymentIdResponseBody$Outbound;
}
