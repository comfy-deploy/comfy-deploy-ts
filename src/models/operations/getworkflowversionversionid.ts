/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type GetWorkflowVersionVersionIdRequest = {
    versionId: string;
};

export type Workflow = {};

export type GetWorkflowVersionVersionIdWorkflowApi = {};

export type GetWorkflowVersionVersionIdSnapshot = {};

export type GetWorkflowVersionVersionIdDependencies = {};

/**
 * Retrieve the output
 */
export type GetWorkflowVersionVersionIdResponseBody = {
    workflowId: string;
    id: string;
    workflow: Workflow;
    workflowApi: GetWorkflowVersionVersionIdWorkflowApi;
    userId: string | null;
    comment: string | null;
    version: number;
    snapshot: GetWorkflowVersionVersionIdSnapshot;
    dependencies: GetWorkflowVersionVersionIdDependencies;
    createdAt: string;
    updatedAt: string;
};

/** @internal */
export const GetWorkflowVersionVersionIdRequest$inboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        version_id: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            version_id: "versionId",
        });
    });

/** @internal */
export type GetWorkflowVersionVersionIdRequest$Outbound = {
    version_id: string;
};

/** @internal */
export const GetWorkflowVersionVersionIdRequest$outboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdRequest$Outbound,
    z.ZodTypeDef,
    GetWorkflowVersionVersionIdRequest
> = z
    .object({
        versionId: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            versionId: "version_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkflowVersionVersionIdRequest$ {
    /** @deprecated use `GetWorkflowVersionVersionIdRequest$inboundSchema` instead. */
    export const inboundSchema = GetWorkflowVersionVersionIdRequest$inboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdRequest$outboundSchema` instead. */
    export const outboundSchema = GetWorkflowVersionVersionIdRequest$outboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdRequest$Outbound` instead. */
    export type Outbound = GetWorkflowVersionVersionIdRequest$Outbound;
}

/** @internal */
export const Workflow$inboundSchema: z.ZodType<Workflow, z.ZodTypeDef, unknown> = z.object({});

/** @internal */
export type Workflow$Outbound = {};

/** @internal */
export const Workflow$outboundSchema: z.ZodType<Workflow$Outbound, z.ZodTypeDef, Workflow> =
    z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Workflow$ {
    /** @deprecated use `Workflow$inboundSchema` instead. */
    export const inboundSchema = Workflow$inboundSchema;
    /** @deprecated use `Workflow$outboundSchema` instead. */
    export const outboundSchema = Workflow$outboundSchema;
    /** @deprecated use `Workflow$Outbound` instead. */
    export type Outbound = Workflow$Outbound;
}

/** @internal */
export const GetWorkflowVersionVersionIdWorkflowApi$inboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdWorkflowApi,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetWorkflowVersionVersionIdWorkflowApi$Outbound = {};

/** @internal */
export const GetWorkflowVersionVersionIdWorkflowApi$outboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdWorkflowApi$Outbound,
    z.ZodTypeDef,
    GetWorkflowVersionVersionIdWorkflowApi
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkflowVersionVersionIdWorkflowApi$ {
    /** @deprecated use `GetWorkflowVersionVersionIdWorkflowApi$inboundSchema` instead. */
    export const inboundSchema = GetWorkflowVersionVersionIdWorkflowApi$inboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdWorkflowApi$outboundSchema` instead. */
    export const outboundSchema = GetWorkflowVersionVersionIdWorkflowApi$outboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdWorkflowApi$Outbound` instead. */
    export type Outbound = GetWorkflowVersionVersionIdWorkflowApi$Outbound;
}

/** @internal */
export const GetWorkflowVersionVersionIdSnapshot$inboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdSnapshot,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetWorkflowVersionVersionIdSnapshot$Outbound = {};

/** @internal */
export const GetWorkflowVersionVersionIdSnapshot$outboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdSnapshot$Outbound,
    z.ZodTypeDef,
    GetWorkflowVersionVersionIdSnapshot
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkflowVersionVersionIdSnapshot$ {
    /** @deprecated use `GetWorkflowVersionVersionIdSnapshot$inboundSchema` instead. */
    export const inboundSchema = GetWorkflowVersionVersionIdSnapshot$inboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdSnapshot$outboundSchema` instead. */
    export const outboundSchema = GetWorkflowVersionVersionIdSnapshot$outboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdSnapshot$Outbound` instead. */
    export type Outbound = GetWorkflowVersionVersionIdSnapshot$Outbound;
}

/** @internal */
export const GetWorkflowVersionVersionIdDependencies$inboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdDependencies,
    z.ZodTypeDef,
    unknown
> = z.object({});

/** @internal */
export type GetWorkflowVersionVersionIdDependencies$Outbound = {};

/** @internal */
export const GetWorkflowVersionVersionIdDependencies$outboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdDependencies$Outbound,
    z.ZodTypeDef,
    GetWorkflowVersionVersionIdDependencies
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkflowVersionVersionIdDependencies$ {
    /** @deprecated use `GetWorkflowVersionVersionIdDependencies$inboundSchema` instead. */
    export const inboundSchema = GetWorkflowVersionVersionIdDependencies$inboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdDependencies$outboundSchema` instead. */
    export const outboundSchema = GetWorkflowVersionVersionIdDependencies$outboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdDependencies$Outbound` instead. */
    export type Outbound = GetWorkflowVersionVersionIdDependencies$Outbound;
}

/** @internal */
export const GetWorkflowVersionVersionIdResponseBody$inboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        workflow_id: z.string(),
        id: z.string(),
        workflow: z.lazy(() => Workflow$inboundSchema),
        workflow_api: z.lazy(() => GetWorkflowVersionVersionIdWorkflowApi$inboundSchema),
        user_id: z.nullable(z.string()),
        comment: z.nullable(z.string()),
        version: z.number(),
        snapshot: z.lazy(() => GetWorkflowVersionVersionIdSnapshot$inboundSchema),
        dependencies: z.lazy(() => GetWorkflowVersionVersionIdDependencies$inboundSchema),
        created_at: z.string(),
        updated_at: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            workflow_id: "workflowId",
            workflow_api: "workflowApi",
            user_id: "userId",
            created_at: "createdAt",
            updated_at: "updatedAt",
        });
    });

/** @internal */
export type GetWorkflowVersionVersionIdResponseBody$Outbound = {
    workflow_id: string;
    id: string;
    workflow: Workflow$Outbound;
    workflow_api: GetWorkflowVersionVersionIdWorkflowApi$Outbound;
    user_id: string | null;
    comment: string | null;
    version: number;
    snapshot: GetWorkflowVersionVersionIdSnapshot$Outbound;
    dependencies: GetWorkflowVersionVersionIdDependencies$Outbound;
    created_at: string;
    updated_at: string;
};

/** @internal */
export const GetWorkflowVersionVersionIdResponseBody$outboundSchema: z.ZodType<
    GetWorkflowVersionVersionIdResponseBody$Outbound,
    z.ZodTypeDef,
    GetWorkflowVersionVersionIdResponseBody
> = z
    .object({
        workflowId: z.string(),
        id: z.string(),
        workflow: z.lazy(() => Workflow$outboundSchema),
        workflowApi: z.lazy(() => GetWorkflowVersionVersionIdWorkflowApi$outboundSchema),
        userId: z.nullable(z.string()),
        comment: z.nullable(z.string()),
        version: z.number(),
        snapshot: z.lazy(() => GetWorkflowVersionVersionIdSnapshot$outboundSchema),
        dependencies: z.lazy(() => GetWorkflowVersionVersionIdDependencies$outboundSchema),
        createdAt: z.string(),
        updatedAt: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            workflowId: "workflow_id",
            workflowApi: "workflow_api",
            userId: "user_id",
            createdAt: "created_at",
            updatedAt: "updated_at",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkflowVersionVersionIdResponseBody$ {
    /** @deprecated use `GetWorkflowVersionVersionIdResponseBody$inboundSchema` instead. */
    export const inboundSchema = GetWorkflowVersionVersionIdResponseBody$inboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdResponseBody$outboundSchema` instead. */
    export const outboundSchema = GetWorkflowVersionVersionIdResponseBody$outboundSchema;
    /** @deprecated use `GetWorkflowVersionVersionIdResponseBody$Outbound` instead. */
    export type Outbound = GetWorkflowVersionVersionIdResponseBody$Outbound;
}
