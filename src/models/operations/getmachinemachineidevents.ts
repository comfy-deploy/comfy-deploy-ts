/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const Status = {
  Running: "running",
  Completed: "completed",
} as const;
export type Status = ClosedEnum<typeof Status>;

export type GetMachineMachineIdEventsRequest = {
  machineId: string;
  status: Status;
  limit?: number | undefined;
};

export const GetMachineMachineIdEventsGpu = {
  T4: "T4",
  L4: "L4",
  A10G: "A10G",
  A100: "A100",
  A10080Gb: "A100-80GB",
  H100: "H100",
} as const;
export type GetMachineMachineIdEventsGpu = ClosedEnum<
  typeof GetMachineMachineIdEventsGpu
>;

export const WsGpu = {
  FourThousandAndNinety: "4090",
} as const;
export type WsGpu = ClosedEnum<typeof WsGpu>;

export const ProviderType = {
  Modal: "modal",
  Runpod: "runpod",
} as const;
export type ProviderType = ClosedEnum<typeof ProviderType>;

export type GetMachineMachineIdEventsResponseBody = {
  id: string;
  userId: string;
  orgId: string | null;
  machineId: string | null;
  startTime: string | null;
  endTime: string | null;
  gpu: GetMachineMachineIdEventsGpu | null;
  wsGpu: WsGpu | null;
  providerType: ProviderType;
  createdAt: string;
  updatedAt: string;
};

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const GetMachineMachineIdEventsRequest$inboundSchema: z.ZodType<
  GetMachineMachineIdEventsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  machine_id: z.string(),
  status: Status$inboundSchema,
  limit: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    "machine_id": "machineId",
  });
});

/** @internal */
export type GetMachineMachineIdEventsRequest$Outbound = {
  machine_id: string;
  status: string;
  limit?: number | undefined;
};

/** @internal */
export const GetMachineMachineIdEventsRequest$outboundSchema: z.ZodType<
  GetMachineMachineIdEventsRequest$Outbound,
  z.ZodTypeDef,
  GetMachineMachineIdEventsRequest
> = z.object({
  machineId: z.string(),
  status: Status$outboundSchema,
  limit: z.number().optional(),
}).transform((v) => {
  return remap$(v, {
    machineId: "machine_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMachineMachineIdEventsRequest$ {
  /** @deprecated use `GetMachineMachineIdEventsRequest$inboundSchema` instead. */
  export const inboundSchema = GetMachineMachineIdEventsRequest$inboundSchema;
  /** @deprecated use `GetMachineMachineIdEventsRequest$outboundSchema` instead. */
  export const outboundSchema = GetMachineMachineIdEventsRequest$outboundSchema;
  /** @deprecated use `GetMachineMachineIdEventsRequest$Outbound` instead. */
  export type Outbound = GetMachineMachineIdEventsRequest$Outbound;
}

/** @internal */
export const GetMachineMachineIdEventsGpu$inboundSchema: z.ZodNativeEnum<
  typeof GetMachineMachineIdEventsGpu
> = z.nativeEnum(GetMachineMachineIdEventsGpu);

/** @internal */
export const GetMachineMachineIdEventsGpu$outboundSchema: z.ZodNativeEnum<
  typeof GetMachineMachineIdEventsGpu
> = GetMachineMachineIdEventsGpu$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMachineMachineIdEventsGpu$ {
  /** @deprecated use `GetMachineMachineIdEventsGpu$inboundSchema` instead. */
  export const inboundSchema = GetMachineMachineIdEventsGpu$inboundSchema;
  /** @deprecated use `GetMachineMachineIdEventsGpu$outboundSchema` instead. */
  export const outboundSchema = GetMachineMachineIdEventsGpu$outboundSchema;
}

/** @internal */
export const WsGpu$inboundSchema: z.ZodNativeEnum<typeof WsGpu> = z.nativeEnum(
  WsGpu,
);

/** @internal */
export const WsGpu$outboundSchema: z.ZodNativeEnum<typeof WsGpu> =
  WsGpu$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WsGpu$ {
  /** @deprecated use `WsGpu$inboundSchema` instead. */
  export const inboundSchema = WsGpu$inboundSchema;
  /** @deprecated use `WsGpu$outboundSchema` instead. */
  export const outboundSchema = WsGpu$outboundSchema;
}

/** @internal */
export const ProviderType$inboundSchema: z.ZodNativeEnum<typeof ProviderType> =
  z.nativeEnum(ProviderType);

/** @internal */
export const ProviderType$outboundSchema: z.ZodNativeEnum<typeof ProviderType> =
  ProviderType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProviderType$ {
  /** @deprecated use `ProviderType$inboundSchema` instead. */
  export const inboundSchema = ProviderType$inboundSchema;
  /** @deprecated use `ProviderType$outboundSchema` instead. */
  export const outboundSchema = ProviderType$outboundSchema;
}

/** @internal */
export const GetMachineMachineIdEventsResponseBody$inboundSchema: z.ZodType<
  GetMachineMachineIdEventsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  user_id: z.string(),
  org_id: z.nullable(z.string()),
  machine_id: z.nullable(z.string()),
  start_time: z.nullable(z.string()),
  end_time: z.nullable(z.string()),
  gpu: z.nullable(GetMachineMachineIdEventsGpu$inboundSchema),
  ws_gpu: z.nullable(WsGpu$inboundSchema),
  providerType: ProviderType$inboundSchema,
  created_at: z.string(),
  updated_at: z.string(),
}).transform((v) => {
  return remap$(v, {
    "user_id": "userId",
    "org_id": "orgId",
    "machine_id": "machineId",
    "start_time": "startTime",
    "end_time": "endTime",
    "ws_gpu": "wsGpu",
    "created_at": "createdAt",
    "updated_at": "updatedAt",
  });
});

/** @internal */
export type GetMachineMachineIdEventsResponseBody$Outbound = {
  id: string;
  user_id: string;
  org_id: string | null;
  machine_id: string | null;
  start_time: string | null;
  end_time: string | null;
  gpu: string | null;
  ws_gpu: string | null;
  providerType: string;
  created_at: string;
  updated_at: string;
};

/** @internal */
export const GetMachineMachineIdEventsResponseBody$outboundSchema: z.ZodType<
  GetMachineMachineIdEventsResponseBody$Outbound,
  z.ZodTypeDef,
  GetMachineMachineIdEventsResponseBody
> = z.object({
  id: z.string(),
  userId: z.string(),
  orgId: z.nullable(z.string()),
  machineId: z.nullable(z.string()),
  startTime: z.nullable(z.string()),
  endTime: z.nullable(z.string()),
  gpu: z.nullable(GetMachineMachineIdEventsGpu$outboundSchema),
  wsGpu: z.nullable(WsGpu$outboundSchema),
  providerType: ProviderType$outboundSchema,
  createdAt: z.string(),
  updatedAt: z.string(),
}).transform((v) => {
  return remap$(v, {
    userId: "user_id",
    orgId: "org_id",
    machineId: "machine_id",
    startTime: "start_time",
    endTime: "end_time",
    wsGpu: "ws_gpu",
    createdAt: "created_at",
    updatedAt: "updated_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetMachineMachineIdEventsResponseBody$ {
  /** @deprecated use `GetMachineMachineIdEventsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetMachineMachineIdEventsResponseBody$inboundSchema;
  /** @deprecated use `GetMachineMachineIdEventsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetMachineMachineIdEventsResponseBody$outboundSchema;
  /** @deprecated use `GetMachineMachineIdEventsResponseBody$Outbound` instead. */
  export type Outbound = GetMachineMachineIdEventsResponseBody$Outbound;
}
