/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export const QueryParamRunOrigin = {
  Manual: "manual",
  Api: "api",
  PublicShare: "public-share",
  PublicTemplate: "public-template",
  Workspace: "workspace",
} as const;
export type QueryParamRunOrigin = ClosedEnum<typeof QueryParamRunOrigin>;

export type GetV1WorkflowsWorkflowIdOutputsRequest = {
  workflowId: string;
  page?: string | undefined;
  pageSize?: string | undefined;
  search?: string | undefined;
  runOrigin?: QueryParamRunOrigin | undefined;
};

export type GetV1WorkflowsWorkflowIdOutputsOutputs = {
  fileURLs: Array<string>;
  runID: string;
  duration: number;
};

/**
 * Specific workflow retrieved successfully
 */
export type GetV1WorkflowsWorkflowIdOutputsResponseBody = {
  outputs: Array<GetV1WorkflowsWorkflowIdOutputsOutputs>;
  total: number;
};

/** @internal */
export const QueryParamRunOrigin$inboundSchema: z.ZodNativeEnum<
  typeof QueryParamRunOrigin
> = z.nativeEnum(QueryParamRunOrigin);

/** @internal */
export const QueryParamRunOrigin$outboundSchema: z.ZodNativeEnum<
  typeof QueryParamRunOrigin
> = QueryParamRunOrigin$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueryParamRunOrigin$ {
  /** @deprecated use `QueryParamRunOrigin$inboundSchema` instead. */
  export const inboundSchema = QueryParamRunOrigin$inboundSchema;
  /** @deprecated use `QueryParamRunOrigin$outboundSchema` instead. */
  export const outboundSchema = QueryParamRunOrigin$outboundSchema;
}

/** @internal */
export const GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema: z.ZodType<
  GetV1WorkflowsWorkflowIdOutputsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workflow_id: z.string(),
  page: z.string().default("1"),
  pageSize: z.string().default("12"),
  search: z.string().optional(),
  runOrigin: QueryParamRunOrigin$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "workflow_id": "workflowId",
  });
});

/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsRequest$Outbound = {
  workflow_id: string;
  page: string;
  pageSize: string;
  search?: string | undefined;
  runOrigin?: string | undefined;
};

/** @internal */
export const GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema: z.ZodType<
  GetV1WorkflowsWorkflowIdOutputsRequest$Outbound,
  z.ZodTypeDef,
  GetV1WorkflowsWorkflowIdOutputsRequest
> = z.object({
  workflowId: z.string(),
  page: z.string().default("1"),
  pageSize: z.string().default("12"),
  search: z.string().optional(),
  runOrigin: QueryParamRunOrigin$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    workflowId: "workflow_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1WorkflowsWorkflowIdOutputsRequest$ {
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema;
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema;
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$Outbound` instead. */
  export type Outbound = GetV1WorkflowsWorkflowIdOutputsRequest$Outbound;
}

/** @internal */
export const GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema: z.ZodType<
  GetV1WorkflowsWorkflowIdOutputsOutputs,
  z.ZodTypeDef,
  unknown
> = z.object({
  fileURLs: z.array(z.string()),
  runID: z.string(),
  duration: z.number(),
});

/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound = {
  fileURLs: Array<string>;
  runID: string;
  duration: number;
};

/** @internal */
export const GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema: z.ZodType<
  GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound,
  z.ZodTypeDef,
  GetV1WorkflowsWorkflowIdOutputsOutputs
> = z.object({
  fileURLs: z.array(z.string()),
  runID: z.string(),
  duration: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1WorkflowsWorkflowIdOutputsOutputs$ {
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema` instead. */
  export const inboundSchema =
    GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema;
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema` instead. */
  export const outboundSchema =
    GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema;
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound` instead. */
  export type Outbound = GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound;
}

/** @internal */
export const GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema:
  z.ZodType<
    GetV1WorkflowsWorkflowIdOutputsResponseBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    outputs: z.array(
      z.lazy(() => GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema),
    ),
    total: z.number(),
  });

/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound = {
  outputs: Array<GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound>;
  total: number;
};

/** @internal */
export const GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema:
  z.ZodType<
    GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound,
    z.ZodTypeDef,
    GetV1WorkflowsWorkflowIdOutputsResponseBody
  > = z.object({
    outputs: z.array(
      z.lazy(() => GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema),
    ),
    total: z.number(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetV1WorkflowsWorkflowIdOutputsResponseBody$ {
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema` instead. */
  export const inboundSchema =
    GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema;
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema` instead. */
  export const outboundSchema =
    GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema;
  /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound` instead. */
  export type Outbound = GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound;
}
