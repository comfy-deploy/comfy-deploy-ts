/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetRunRunRunIdGetRequest = {
  runId: string;
};

/** @internal */
export const GetRunRunRunIdGetRequest$inboundSchema: z.ZodType<
  GetRunRunRunIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  run_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "run_id": "runId",
  });
});

/** @internal */
export type GetRunRunRunIdGetRequest$Outbound = {
  run_id: string;
};

/** @internal */
export const GetRunRunRunIdGetRequest$outboundSchema: z.ZodType<
  GetRunRunRunIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetRunRunRunIdGetRequest
> = z.object({
  runId: z.string(),
}).transform((v) => {
  return remap$(v, {
    runId: "run_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetRunRunRunIdGetRequest$ {
  /** @deprecated use `GetRunRunRunIdGetRequest$inboundSchema` instead. */
  export const inboundSchema = GetRunRunRunIdGetRequest$inboundSchema;
  /** @deprecated use `GetRunRunRunIdGetRequest$outboundSchema` instead. */
  export const outboundSchema = GetRunRunRunIdGetRequest$outboundSchema;
  /** @deprecated use `GetRunRunRunIdGetRequest$Outbound` instead. */
  export type Outbound = GetRunRunRunIdGetRequest$Outbound;
}

export function getRunRunRunIdGetRequestToJSON(
  getRunRunRunIdGetRequest: GetRunRunRunIdGetRequest,
): string {
  return JSON.stringify(
    GetRunRunRunIdGetRequest$outboundSchema.parse(getRunRunRunIdGetRequest),
  );
}

export function getRunRunRunIdGetRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetRunRunRunIdGetRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetRunRunRunIdGetRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetRunRunRunIdGetRequest' from JSON`,
  );
}
