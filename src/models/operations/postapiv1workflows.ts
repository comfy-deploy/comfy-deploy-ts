/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as z from "zod";

export type WorkflowJson = {};

export type PostApiV1WorkflowsRequestBody = {
    workflowName?: string | undefined;
    workflowJson?: WorkflowJson | undefined;
    createMachine?: boolean | undefined;
};

/**
 * Workflow created successfully
 */
export type PostApiV1WorkflowsResponseBody = {
    workflowId: string;
    workflowVersion: number;
    machineId?: string | undefined;
};

/** @internal */
export const WorkflowJson$inboundSchema: z.ZodType<WorkflowJson, z.ZodTypeDef, unknown> = z.object(
    {}
);

/** @internal */
export type WorkflowJson$Outbound = {};

/** @internal */
export const WorkflowJson$outboundSchema: z.ZodType<
    WorkflowJson$Outbound,
    z.ZodTypeDef,
    WorkflowJson
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowJson$ {
    /** @deprecated use `WorkflowJson$inboundSchema` instead. */
    export const inboundSchema = WorkflowJson$inboundSchema;
    /** @deprecated use `WorkflowJson$outboundSchema` instead. */
    export const outboundSchema = WorkflowJson$outboundSchema;
    /** @deprecated use `WorkflowJson$Outbound` instead. */
    export type Outbound = WorkflowJson$Outbound;
}

/** @internal */
export const PostApiV1WorkflowsRequestBody$inboundSchema: z.ZodType<
    PostApiV1WorkflowsRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        workflow_name: z.string().default("new workflow"),
        workflow_json: z.lazy(() => WorkflowJson$inboundSchema).optional(),
        create_machine: z.boolean().default(true),
    })
    .transform((v) => {
        return remap$(v, {
            workflow_name: "workflowName",
            workflow_json: "workflowJson",
            create_machine: "createMachine",
        });
    });

/** @internal */
export type PostApiV1WorkflowsRequestBody$Outbound = {
    workflow_name: string;
    workflow_json?: WorkflowJson$Outbound | undefined;
    create_machine: boolean;
};

/** @internal */
export const PostApiV1WorkflowsRequestBody$outboundSchema: z.ZodType<
    PostApiV1WorkflowsRequestBody$Outbound,
    z.ZodTypeDef,
    PostApiV1WorkflowsRequestBody
> = z
    .object({
        workflowName: z.string().default("new workflow"),
        workflowJson: z.lazy(() => WorkflowJson$outboundSchema).optional(),
        createMachine: z.boolean().default(true),
    })
    .transform((v) => {
        return remap$(v, {
            workflowName: "workflow_name",
            workflowJson: "workflow_json",
            createMachine: "create_machine",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiV1WorkflowsRequestBody$ {
    /** @deprecated use `PostApiV1WorkflowsRequestBody$inboundSchema` instead. */
    export const inboundSchema = PostApiV1WorkflowsRequestBody$inboundSchema;
    /** @deprecated use `PostApiV1WorkflowsRequestBody$outboundSchema` instead. */
    export const outboundSchema = PostApiV1WorkflowsRequestBody$outboundSchema;
    /** @deprecated use `PostApiV1WorkflowsRequestBody$Outbound` instead. */
    export type Outbound = PostApiV1WorkflowsRequestBody$Outbound;
}

/** @internal */
export const PostApiV1WorkflowsResponseBody$inboundSchema: z.ZodType<
    PostApiV1WorkflowsResponseBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        workflow_id: z.string(),
        workflow_version: z.number(),
        machine_id: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            workflow_id: "workflowId",
            workflow_version: "workflowVersion",
            machine_id: "machineId",
        });
    });

/** @internal */
export type PostApiV1WorkflowsResponseBody$Outbound = {
    workflow_id: string;
    workflow_version: number;
    machine_id?: string | undefined;
};

/** @internal */
export const PostApiV1WorkflowsResponseBody$outboundSchema: z.ZodType<
    PostApiV1WorkflowsResponseBody$Outbound,
    z.ZodTypeDef,
    PostApiV1WorkflowsResponseBody
> = z
    .object({
        workflowId: z.string(),
        workflowVersion: z.number(),
        machineId: z.string().optional(),
    })
    .transform((v) => {
        return remap$(v, {
            workflowId: "workflow_id",
            workflowVersion: "workflow_version",
            machineId: "machine_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PostApiV1WorkflowsResponseBody$ {
    /** @deprecated use `PostApiV1WorkflowsResponseBody$inboundSchema` instead. */
    export const inboundSchema = PostApiV1WorkflowsResponseBody$inboundSchema;
    /** @deprecated use `PostApiV1WorkflowsResponseBody$outboundSchema` instead. */
    export const outboundSchema = PostApiV1WorkflowsResponseBody$outboundSchema;
    /** @deprecated use `PostApiV1WorkflowsResponseBody$Outbound` instead. */
    export type Outbound = PostApiV1WorkflowsResponseBody$Outbound;
}
