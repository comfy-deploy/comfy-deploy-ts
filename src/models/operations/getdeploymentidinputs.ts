/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";

export type GetDeploymentIdInputsRequest = {
  id: string;
};

export const ClassType = {
  ComfyUIDeployExternalText: "ComfyUIDeployExternalText",
  ComfyUIDeployExternalTextAny: "ComfyUIDeployExternalTextAny",
  ComfyUIDeployExternalTextSingleLine: "ComfyUIDeployExternalTextSingleLine",
  ComfyUIDeployExternalImage: "ComfyUIDeployExternalImage",
  ComfyUIDeployExternalImageAlpha: "ComfyUIDeployExternalImageAlpha",
  ComfyUIDeployExternalNumber: "ComfyUIDeployExternalNumber",
  ComfyUIDeployExternalNumberInt: "ComfyUIDeployExternalNumberInt",
  ComfyUIDeployExternalLora: "ComfyUIDeployExternalLora",
  ComfyUIDeployExternalCheckpoint: "ComfyUIDeployExternalCheckpoint",
  ComfyDeployWebscoketImageInput: "ComfyDeployWebscoketImageInput",
  ComfyUIDeployExternalImageBatch: "ComfyUIDeployExternalImageBatch",
  ComfyUIDeployExternalVideo: "ComfyUIDeployExternalVideo",
  ComfyUIDeployExternalBoolean: "ComfyUIDeployExternalBoolean",
  ComfyUIDeployExternalNumberSlider: "ComfyUIDeployExternalNumberSlider",
  ComfyUIDeployExternalNumberSliderInt: "ComfyUIDeployExternalNumberSliderInt",
  ComfyUIDeployExternalEnum: "ComfyUIDeployExternalEnum",
} as const;
export type ClassType = ClosedEnum<typeof ClassType>;

export type DefaultValue = string | number;

export type ResponseBody = {
  classType: ClassType;
  inputId: string;
  defaultValue: string | number;
  minValue?: number | undefined;
  maxValue?: number | undefined;
  displayName?: string | undefined;
  description?: string | undefined;
  enumValues?: Array<string> | undefined;
};

/** @internal */
export const GetDeploymentIdInputsRequest$inboundSchema: z.ZodType<
  GetDeploymentIdInputsRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
});

/** @internal */
export type GetDeploymentIdInputsRequest$Outbound = {
  id: string;
};

/** @internal */
export const GetDeploymentIdInputsRequest$outboundSchema: z.ZodType<
  GetDeploymentIdInputsRequest$Outbound,
  z.ZodTypeDef,
  GetDeploymentIdInputsRequest
> = z.object({
  id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetDeploymentIdInputsRequest$ {
  /** @deprecated use `GetDeploymentIdInputsRequest$inboundSchema` instead. */
  export const inboundSchema = GetDeploymentIdInputsRequest$inboundSchema;
  /** @deprecated use `GetDeploymentIdInputsRequest$outboundSchema` instead. */
  export const outboundSchema = GetDeploymentIdInputsRequest$outboundSchema;
  /** @deprecated use `GetDeploymentIdInputsRequest$Outbound` instead. */
  export type Outbound = GetDeploymentIdInputsRequest$Outbound;
}

/** @internal */
export const ClassType$inboundSchema: z.ZodNativeEnum<typeof ClassType> = z
  .nativeEnum(ClassType);

/** @internal */
export const ClassType$outboundSchema: z.ZodNativeEnum<typeof ClassType> =
  ClassType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ClassType$ {
  /** @deprecated use `ClassType$inboundSchema` instead. */
  export const inboundSchema = ClassType$inboundSchema;
  /** @deprecated use `ClassType$outboundSchema` instead. */
  export const outboundSchema = ClassType$outboundSchema;
}

/** @internal */
export const DefaultValue$inboundSchema: z.ZodType<
  DefaultValue,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.number()]);

/** @internal */
export type DefaultValue$Outbound = string | number;

/** @internal */
export const DefaultValue$outboundSchema: z.ZodType<
  DefaultValue$Outbound,
  z.ZodTypeDef,
  DefaultValue
> = z.union([z.string(), z.number()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DefaultValue$ {
  /** @deprecated use `DefaultValue$inboundSchema` instead. */
  export const inboundSchema = DefaultValue$inboundSchema;
  /** @deprecated use `DefaultValue$outboundSchema` instead. */
  export const outboundSchema = DefaultValue$outboundSchema;
  /** @deprecated use `DefaultValue$Outbound` instead. */
  export type Outbound = DefaultValue$Outbound;
}

/** @internal */
export const ResponseBody$inboundSchema: z.ZodType<
  ResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  class_type: ClassType$inboundSchema,
  input_id: z.string(),
  default_value: z.union([z.string(), z.number()]),
  min_value: z.number().optional(),
  max_value: z.number().optional(),
  display_name: z.string().optional(),
  description: z.string().optional(),
  enum_values: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    "class_type": "classType",
    "input_id": "inputId",
    "default_value": "defaultValue",
    "min_value": "minValue",
    "max_value": "maxValue",
    "display_name": "displayName",
    "enum_values": "enumValues",
  });
});

/** @internal */
export type ResponseBody$Outbound = {
  class_type: string;
  input_id: string;
  default_value: string | number;
  min_value?: number | undefined;
  max_value?: number | undefined;
  display_name?: string | undefined;
  description?: string | undefined;
  enum_values?: Array<string> | undefined;
};

/** @internal */
export const ResponseBody$outboundSchema: z.ZodType<
  ResponseBody$Outbound,
  z.ZodTypeDef,
  ResponseBody
> = z.object({
  classType: ClassType$outboundSchema,
  inputId: z.string(),
  defaultValue: z.union([z.string(), z.number()]),
  minValue: z.number().optional(),
  maxValue: z.number().optional(),
  displayName: z.string().optional(),
  description: z.string().optional(),
  enumValues: z.array(z.string()).optional(),
}).transform((v) => {
  return remap$(v, {
    classType: "class_type",
    inputId: "input_id",
    defaultValue: "default_value",
    minValue: "min_value",
    maxValue: "max_value",
    displayName: "display_name",
    enumValues: "enum_values",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseBody$ {
  /** @deprecated use `ResponseBody$inboundSchema` instead. */
  export const inboundSchema = ResponseBody$inboundSchema;
  /** @deprecated use `ResponseBody$outboundSchema` instead. */
  export const outboundSchema = ResponseBody$outboundSchema;
  /** @deprecated use `ResponseBody$Outbound` instead. */
  export type Outbound = ResponseBody$Outbound;
}
