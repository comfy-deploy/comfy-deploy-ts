/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type DeleteSessionSessionSessionIdDeleteRequest = {
  sessionId: string;
};

/** @internal */
export const DeleteSessionSessionSessionIdDeleteRequest$inboundSchema:
  z.ZodType<DeleteSessionSessionSessionIdDeleteRequest, z.ZodTypeDef, unknown> =
    z.object({
      session_id: z.string(),
    }).transform((v) => {
      return remap$(v, {
        "session_id": "sessionId",
      });
    });

/** @internal */
export type DeleteSessionSessionSessionIdDeleteRequest$Outbound = {
  session_id: string;
};

/** @internal */
export const DeleteSessionSessionSessionIdDeleteRequest$outboundSchema:
  z.ZodType<
    DeleteSessionSessionSessionIdDeleteRequest$Outbound,
    z.ZodTypeDef,
    DeleteSessionSessionSessionIdDeleteRequest
  > = z.object({
    sessionId: z.string(),
  }).transform((v) => {
    return remap$(v, {
      sessionId: "session_id",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteSessionSessionSessionIdDeleteRequest$ {
  /** @deprecated use `DeleteSessionSessionSessionIdDeleteRequest$inboundSchema` instead. */
  export const inboundSchema =
    DeleteSessionSessionSessionIdDeleteRequest$inboundSchema;
  /** @deprecated use `DeleteSessionSessionSessionIdDeleteRequest$outboundSchema` instead. */
  export const outboundSchema =
    DeleteSessionSessionSessionIdDeleteRequest$outboundSchema;
  /** @deprecated use `DeleteSessionSessionSessionIdDeleteRequest$Outbound` instead. */
  export type Outbound = DeleteSessionSessionSessionIdDeleteRequest$Outbound;
}
