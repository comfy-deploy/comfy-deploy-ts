/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";

export type GetSessionSessionSessionIdGetRequest = {
  sessionId: string;
};

/** @internal */
export const GetSessionSessionSessionIdGetRequest$inboundSchema: z.ZodType<
  GetSessionSessionSessionIdGetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  session_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "session_id": "sessionId",
  });
});

/** @internal */
export type GetSessionSessionSessionIdGetRequest$Outbound = {
  session_id: string;
};

/** @internal */
export const GetSessionSessionSessionIdGetRequest$outboundSchema: z.ZodType<
  GetSessionSessionSessionIdGetRequest$Outbound,
  z.ZodTypeDef,
  GetSessionSessionSessionIdGetRequest
> = z.object({
  sessionId: z.string(),
}).transform((v) => {
  return remap$(v, {
    sessionId: "session_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetSessionSessionSessionIdGetRequest$ {
  /** @deprecated use `GetSessionSessionSessionIdGetRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetSessionSessionSessionIdGetRequest$inboundSchema;
  /** @deprecated use `GetSessionSessionSessionIdGetRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetSessionSessionSessionIdGetRequest$outboundSchema;
  /** @deprecated use `GetSessionSessionSessionIdGetRequest$Outbound` instead. */
  export type Outbound = GetSessionSessionSessionIdGetRequest$Outbound;
}
