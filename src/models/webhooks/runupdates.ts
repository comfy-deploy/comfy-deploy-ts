/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Status = {
    NotStarted: "not-started",
    Running: "running",
    Uploading: "uploading",
    Success: "success",
    Failed: "failed",
    Started: "started",
    Queued: "queued",
    Timeout: "timeout",
    Cancelled: "cancelled",
} as const;
export type Status = ClosedEnum<typeof Status>;

export type Images = {
    url: string;
    filename: string;
};

export type Files = {
    url: string;
    filename: string;
};

export type Gifs = {
    url: string;
    filename: string;
};

export type Data = {
    images?: Array<Images> | undefined;
    files?: Array<Files> | undefined;
    gifs?: Array<Gifs> | undefined;
    text?: Array<string> | undefined;
};

export type Outputs = {
    data: Data;
};

export type RunUpdatesRequestBody = {
    status: Status;
    liveStatus: string;
    progress: number;
    runId: string;
    outputs: Array<Outputs>;
};

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z.nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> = Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
    /** @deprecated use `Status$inboundSchema` instead. */
    export const inboundSchema = Status$inboundSchema;
    /** @deprecated use `Status$outboundSchema` instead. */
    export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const Images$inboundSchema: z.ZodType<Images, z.ZodTypeDef, unknown> = z.object({
    url: z.string(),
    filename: z.string(),
});

/** @internal */
export type Images$Outbound = {
    url: string;
    filename: string;
};

/** @internal */
export const Images$outboundSchema: z.ZodType<Images$Outbound, z.ZodTypeDef, Images> = z.object({
    url: z.string(),
    filename: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Images$ {
    /** @deprecated use `Images$inboundSchema` instead. */
    export const inboundSchema = Images$inboundSchema;
    /** @deprecated use `Images$outboundSchema` instead. */
    export const outboundSchema = Images$outboundSchema;
    /** @deprecated use `Images$Outbound` instead. */
    export type Outbound = Images$Outbound;
}

/** @internal */
export const Files$inboundSchema: z.ZodType<Files, z.ZodTypeDef, unknown> = z.object({
    url: z.string(),
    filename: z.string(),
});

/** @internal */
export type Files$Outbound = {
    url: string;
    filename: string;
};

/** @internal */
export const Files$outboundSchema: z.ZodType<Files$Outbound, z.ZodTypeDef, Files> = z.object({
    url: z.string(),
    filename: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Files$ {
    /** @deprecated use `Files$inboundSchema` instead. */
    export const inboundSchema = Files$inboundSchema;
    /** @deprecated use `Files$outboundSchema` instead. */
    export const outboundSchema = Files$outboundSchema;
    /** @deprecated use `Files$Outbound` instead. */
    export type Outbound = Files$Outbound;
}

/** @internal */
export const Gifs$inboundSchema: z.ZodType<Gifs, z.ZodTypeDef, unknown> = z.object({
    url: z.string(),
    filename: z.string(),
});

/** @internal */
export type Gifs$Outbound = {
    url: string;
    filename: string;
};

/** @internal */
export const Gifs$outboundSchema: z.ZodType<Gifs$Outbound, z.ZodTypeDef, Gifs> = z.object({
    url: z.string(),
    filename: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Gifs$ {
    /** @deprecated use `Gifs$inboundSchema` instead. */
    export const inboundSchema = Gifs$inboundSchema;
    /** @deprecated use `Gifs$outboundSchema` instead. */
    export const outboundSchema = Gifs$outboundSchema;
    /** @deprecated use `Gifs$Outbound` instead. */
    export type Outbound = Gifs$Outbound;
}

/** @internal */
export const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown> = z.object({
    images: z.array(z.lazy(() => Images$inboundSchema)).optional(),
    files: z.array(z.lazy(() => Files$inboundSchema)).optional(),
    gifs: z.array(z.lazy(() => Gifs$inboundSchema)).optional(),
    text: z.array(z.string()).optional(),
});

/** @internal */
export type Data$Outbound = {
    images?: Array<Images$Outbound> | undefined;
    files?: Array<Files$Outbound> | undefined;
    gifs?: Array<Gifs$Outbound> | undefined;
    text?: Array<string> | undefined;
};

/** @internal */
export const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data> = z.object({
    images: z.array(z.lazy(() => Images$outboundSchema)).optional(),
    files: z.array(z.lazy(() => Files$outboundSchema)).optional(),
    gifs: z.array(z.lazy(() => Gifs$outboundSchema)).optional(),
    text: z.array(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Data$ {
    /** @deprecated use `Data$inboundSchema` instead. */
    export const inboundSchema = Data$inboundSchema;
    /** @deprecated use `Data$outboundSchema` instead. */
    export const outboundSchema = Data$outboundSchema;
    /** @deprecated use `Data$Outbound` instead. */
    export type Outbound = Data$Outbound;
}

/** @internal */
export const Outputs$inboundSchema: z.ZodType<Outputs, z.ZodTypeDef, unknown> = z.object({
    data: z.lazy(() => Data$inboundSchema),
});

/** @internal */
export type Outputs$Outbound = {
    data: Data$Outbound;
};

/** @internal */
export const Outputs$outboundSchema: z.ZodType<Outputs$Outbound, z.ZodTypeDef, Outputs> = z.object({
    data: z.lazy(() => Data$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Outputs$ {
    /** @deprecated use `Outputs$inboundSchema` instead. */
    export const inboundSchema = Outputs$inboundSchema;
    /** @deprecated use `Outputs$outboundSchema` instead. */
    export const outboundSchema = Outputs$outboundSchema;
    /** @deprecated use `Outputs$Outbound` instead. */
    export type Outbound = Outputs$Outbound;
}

/** @internal */
export const RunUpdatesRequestBody$inboundSchema: z.ZodType<
    RunUpdatesRequestBody,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        status: Status$inboundSchema,
        live_status: z.string(),
        progress: z.number(),
        run_id: z.string(),
        outputs: z.array(z.lazy(() => Outputs$inboundSchema)),
    })
    .transform((v) => {
        return remap$(v, {
            live_status: "liveStatus",
            run_id: "runId",
        });
    });

/** @internal */
export type RunUpdatesRequestBody$Outbound = {
    status: string;
    live_status: string;
    progress: number;
    run_id: string;
    outputs: Array<Outputs$Outbound>;
};

/** @internal */
export const RunUpdatesRequestBody$outboundSchema: z.ZodType<
    RunUpdatesRequestBody$Outbound,
    z.ZodTypeDef,
    RunUpdatesRequestBody
> = z
    .object({
        status: Status$outboundSchema,
        liveStatus: z.string(),
        progress: z.number(),
        runId: z.string(),
        outputs: z.array(z.lazy(() => Outputs$outboundSchema)),
    })
    .transform((v) => {
        return remap$(v, {
            liveStatus: "live_status",
            runId: "run_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RunUpdatesRequestBody$ {
    /** @deprecated use `RunUpdatesRequestBody$inboundSchema` instead. */
    export const inboundSchema = RunUpdatesRequestBody$inboundSchema;
    /** @deprecated use `RunUpdatesRequestBody$outboundSchema` instead. */
    export const outboundSchema = RunUpdatesRequestBody$outboundSchema;
    /** @deprecated use `RunUpdatesRequestBody$Outbound` instead. */
    export type Outbound = RunUpdatesRequestBody$Outbound;
}
